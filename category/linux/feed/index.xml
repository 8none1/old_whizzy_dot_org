<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>linux &#8211; whizzy.org</title>
	<atom:link href="/category/linux/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>On code and gadgets.</description>
	<lastBuildDate>Wed, 14 Jul 2021 11:40:33 +0000</lastBuildDate>
	<language>en-GB</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.2</generator>
	<item>
		<title>Double helping of Pi Hole</title>
		<link>/2021/01/02/double-helping-of-pi-hole/</link>
					<comments>/2021/01/02/double-helping-of-pi-hole/#comments</comments>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Sat, 02 Jan 2021 17:45:02 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<category><![CDATA[RaspberryPi]]></category>
		<category><![CDATA[Ubuntu]]></category>
		<guid isPermaLink="false">/?p=1020</guid>

					<description><![CDATA[Improve the performance of Pi Hole by running it on a more powerful computer. Durr.]]></description>
										<content:encoded><![CDATA[
<p>In <a href="https://latenightlinux.com/late-night-linux-episode-100/">episode 100 of Late Night Linux</a> I talked a little bit about trying out <a href="https://pi-hole.net/">Pi Hole</a> and <a href="https://adguard.com/en/welcome.html">AdGuard</a> to replace my home grown ad blocker based on <a href="http://www.thekelleys.org.uk/dnsmasq/doc.html">dnsmasq</a> and a massive hosts file.</p>



<p>I came down in favour of Pi Hole for a couple of reasons but the deciding factor was that Pi Hole felt a bit more open and that it was built on top of <code>dnsmasq</code> which allowed me to reuse config for TFTP which netboots some devices which needed it.</p>



<p>Now that I&#8217;ve been using Pi Hole for a few months I have a much better understanding of its limitations and the big one for me is performance. Not the performance when servicing DNS requests but performance when querying the stats data, when reloading block lists and when enabling and disabling certain lists. I suspect a lot of the problems I was having is down to flaky SD cards.</p>



<p>I fully expect that for most people this will never be a problem, but for me it was an itch I wanted to scratch, so here&#8217;s what I did:</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img width="341" height="581" src="/wp-content/uploads/2021/01/Double-Pi-Hole.png" alt="" class="wp-image-1021" srcset="/wp-content/uploads/2021/01/Double-Pi-Hole.png 341w, /wp-content/uploads/2021/01/Double-Pi-Hole-176x300.png 176w" sizes="(max-width: 341px) 100vw, 341px" /></figure></div>



<p>Through the actually quite generous <a href="https://developer.amazon.com/en-US/alexa/alexa-skills-kit/new/aws-promotional-credits">Amazon Alexa AWS Credits promotion</a> I have free money to spend on AWS services, so I spun up a <code>t2.micro</code> EC2 instance (1 vCPU, 1GB RAM &#8211; approx Â£10 a month) running Ubuntu.</p>



<p>I installed Pi Hole on that instance along with Wireguard which connects it back to my local network at home.  I used <a href="https://www.linode.com/docs/guides/set-up-wireguard-vpn-on-ubuntu/">this guide from Linode</a> to get Wireguard set up.  </p>



<p>The Pi Hole running in AWS hosts the large block files and is configured with a normal upstream DNS server as its upstream (I&#8217;m using Cloudflare).</p>



<figure class="wp-block-image size-large"><img width="484" height="627" src="/wp-content/uploads/2021/01/image-2.png" alt="" class="wp-image-1024" srcset="/wp-content/uploads/2021/01/image-2.png 484w, /wp-content/uploads/2021/01/image-2-232x300.png 232w" sizes="(max-width: 484px) 100vw, 484px" /><figcaption>Pi Hole running in AWS configured with Cloudflare as its upstream DNS</figcaption></figure>



<p>I use three Ad block lists:</p>



<ul><li><code>OISD:</code> <a href="https://dbl.oisd.nl/">https://dbl.oisd.nl/</a></li><li><code>Wally3k:</code> <a href="https://v.firebog.net/hosts/static/w3kbl.txt">https://v.firebog.net/hosts/static/w3kbl.txt</a></li><li><code>Polish Filters Team: </code><a href="https://raw.githubusercontent.com/PolishFiltersTeam/KADhosts/master/KADhosts_without_controversies.txt">https://raw.githubusercontent.com/PolishFiltersTeam/KADhosts/master/KADhosts_without_controversies.txt</a></li></ul>



<figure class="wp-block-image size-large"><img width="1000" height="389" src="/wp-content/uploads/2021/01/image-1.png" alt="" class="wp-image-1023" srcset="/wp-content/uploads/2021/01/image-1.png 1000w, /wp-content/uploads/2021/01/image-1-300x117.png 300w, /wp-content/uploads/2021/01/image-1-768x299.png 768w, /wp-content/uploads/2021/01/image-1-720x280.png 720w" sizes="(max-width: 1000px) 100vw, 1000px" /></figure>



<p>Pi Hole running on a <code>t2.micro</code> instance is really speedy.  I can reload the block list in a matter of seconds (versus minutes on the Pi) and querying the stats database no longer locks up and crashes Pi Hole&#8217;s management engine FTL.</p>



<p>The Pi Hole running on my LAN is configured to use the above AWS based Pi Hole as its upstream DNS server and also has a couple of additional block lists for <a href="https://raw.githubusercontent.com/8none1/pihole-blocklists/main/youtube/hosts">YouTube</a> and <a href="https://raw.githubusercontent.com/llacb47/mischosts/master/social/tiktok-block">TikTok</a>.</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img width="1000" height="389" src="/wp-content/uploads/2021/01/image.png" alt="" class="wp-image-1022" srcset="/wp-content/uploads/2021/01/image.png 1000w, /wp-content/uploads/2021/01/image-300x117.png 300w, /wp-content/uploads/2021/01/image-768x299.png 768w, /wp-content/uploads/2021/01/image-720x280.png 720w" sizes="(max-width: 1000px) 100vw, 1000px" /></figure></div>



<p>This allows me use Pi Hole on a Pi as the DHCP server on my LAN and benefit from the GUI to configure things.  I can quickly and easily block YouTube when the kids have done enough and won&#8217;t listen to reason and the heavy lifting of bulk ad blocking is done on an AWS EC2 instance.  The Pi on the LAN will cache a good amount of DNS and so everything whizzes along quickly.</p>



<p>Pi Hole on the LAN has a block list of about 3600 hosts, whereas the version running in AWS has over 1.5 million.</p>



<p>All things considered I&#8217;m really happy with Pi Hole and the split-load set up I have now makes it even easier to live with.  I would like to see an improved Pi Hole API for enabling and disabling specific Ad lists so that I can make it easier to automate (e.g. unblock YouTube for two hours on a Saturday morning).  I think that will come in time.  The split-load set up also allows for easy fallback should the AWS machine need maintenance &#8211; it would be nice to have a &#8220;DNS server of last resort&#8221; in Pi Hole to make that automatic.  Perhaps it already does, I should investigate.</p>



<p>Why not just run Pi Hole on a more powerful computer in the first place? That would be too easy.</p>



<p>If you fancy trying out Pi Hole in the cloud or just playing with Wireguard you can get $100 free credit with Linode with the Late Night Linux referral code: <a href="https://linode.com/latenightlinux">https://linode.com/latenightlinux</a></p>



<p></p>
]]></content:encoded>
					
					<wfw:commentRss>/2021/01/02/double-helping-of-pi-hole/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
			</item>
		<item>
		<title>DNS over HTTPS in a snap</title>
		<link>/2019/07/16/dns-over-https-in-a-snap/</link>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Tue, 16 Jul 2019 20:07:44 +0000</pubDate>
				<category><![CDATA[IoT]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[RaspberryPi]]></category>
		<category><![CDATA[Ubuntu]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<guid isPermaLink="false">/?p=970</guid>

					<description><![CDATA[Background Story With the recent news about the ISP UK association proposing Mozilla [&#8230;]]]></description>
										<content:encoded><![CDATA[
<h2>Background Story</h2>



<p>With the recent news about the ISP UK association proposing Mozilla as &#8220;<a href="https://www.ispa.org.uk/ispa-announces-finalists-for-2019-internet-heroes-and-villains-trump-and-mozilla-lead-the-way-as-villain-nominees/">Internet villain of the year</a>&#8221; for enabling DNS over HTTPS (and subsequently changing their mind and dropping the whole category of villain of the year.  Good move I think.) I figured it was probably about time that I looked at enabling DoH at home.</p>



<p>Cloudflare have a suite of open source tools called <a href="https://github.com/cloudflare/cloudflared/">cloudflared</a> which has, among other things, a DNS over HTTPS proxy.  By default it points at their 1.1.1.1 service, but you can change that if you want to.  Note, at the time of writing there is a <a href="https://github.com/cloudflare/cloudflared/issues/113">bug</a> which seems to stop Google&#8217;s DNS service working.  If you&#8217;re looking to stop people seeing your DNS traffic then Google probably isn&#8217;t the right DNS service to use anyway.</p>



<figure class="wp-block-image size-large"><img width="353" height="469" src="/wp-content/uploads/2019/07/proxy-dns.jpg" alt="" class="wp-image-972" srcset="/wp-content/uploads/2019/07/proxy-dns.jpg 353w, /wp-content/uploads/2019/07/proxy-dns-226x300.jpg 226w" sizes="(max-width: 353px) 100vw, 353px" /></figure>



<p>I already have dnsmasq running as my DNS server and I have quite a lot of config which I wanted to keep (e.g. adblocking) so I figured I would add cloudflared&#8217;s proxy-dns alongside dnsmasq and have dnsmasq use proxy-dns as it&#8217;s upstream server, which would in turn pass the DNS lookups to 1.1.1.1 over HTTPS.  dnsmasq would then cache the results locally.</p>



<p>So far, so good.  I&#8217;d built cloudflared on my desktop to test it, now I wanted to move it on to the Raspberry Pi, run it as a service, and ideally have a package so that I didn&#8217;t have to mess around rebuilding it in loads of places if I wanted to move to a different box.</p>



<h2>Make a snap</h2>



<p>Making a snap of proxy-dns would give the the package I wanted, and could allow me to run proxy-dns as a daemon with two words in the YAML.  Snapcraft&#8217;s <a href="https://snapcraft.io/build">build service</a> would build me an ARM binary, as well as loads of others, for free.</p>



<p>I downloaded the source for <a href="https://github.com/cloudflare/cloudflared">cloudflared</a> and added three files:</p>



<ol><li>A <a href="https://github.com/8none1/cloudflaredohsnap/blob/master/snapcraft.yaml">snapcraft.yaml</a> which describes how to build cloudflared and sets it to be run as a daemon</li><li>A <a href="https://github.com/8none1/cloudflaredohsnap/blob/master/snap/hooks/configure">configure hook</a> which lets me set some config options</li><li>A <a href="https://github.com/8none1/cloudflaredohsnap/blob/master/launcher/launcher">launcher script</a> which sets the config at run time</li></ol>



<p>None of these are very complicated, as you can see.  Hat-tip to <a href="https://twitter.com/popey">Popey</a> for help with the snapcraft.yaml.</p>



<p>The I pushed these back to my project on <a href="https://github.com/8none1/cloudflaredohsnap">GitHub</a> and added that project to the <a href="https://snapcraft.io/build">Snapcraft.io build service</a>.  Now, whenever I push a new change back to GitHub the snap will get rebuilt <strong>automatically</strong> and uploaded to the store! All I would need to do is a snap refresh and I&#8217;d be upgraded to the latest version. All my requirements solved in one place.</p>



<h2>How to use the snap</h2>



<p>If your Pi is running snapd, it&#8217;s dead easy (e.g. Ubuntu MATE or Ubuntu Core):</p>



<pre class="wp-block-preformatted">sudo snap install cloudflaredoh --edge</pre>



<p>The snap is currently in the edge channel, meaning it&#8217;s not ready for the main stage just yet.  Once I&#8217;ve spent a bit more time on it, I will move it to stable.</p>



<pre class="wp-block-preformatted">sudo snap set cloudflaredoh address=127.0.0.1<br>sudo snap set cloudflaredoh port=5053</pre>



<p>Configure proxy-dns to listen on 127.0.0.1.  If you want it to answer DNS queries from other computers on your network try either the IP address of the box, or just 0.0.0.0 to listen on all interfaces.  It will also configure proxy-dns to listen on port 5053.  If you want it to answer DNS queries from other computers on your network, use the default DNS port of 53.</p>



<pre class="wp-block-preformatted">sudo snap get cloudflaredoh</pre>



<p>This will show you the currently set config options.</p>



<pre class="wp-block-preformatted">sudo snap restart cloudflaredoh</pre>



<p>Restart proxy-dns and use the new config.</p>



<p>Now you can use something like nslookup to query the DNS server and make sure it&#8217;s doing what you expected.</p>



<h2>10 Steps To DNS-over-HTTPS</h2>



<ol><li>Get a Raspberry Pi</li><li>Download Ubuntu Core and write it to an SD card</li><li>Put the SD card in your Pi and boot it</li><li>Set up the network on Ubuntu Core (tip: register for an <a href="https://login.ubuntu.com/+login">Ubuntu One</a> account first)</li><li>sudo snap install cloudflaredoh</li><li>sudo snap set cloudflaredoh address=0.0.0.0</li><li>sudo snap set cloudflaredoh port=53</li><li>sudo snap restart cloudflaredoh</li><li>Configure your client&#8217;s DNS server as the IP address of your Pi</li><li>Have a cup of tea</li></ol>



<h2>Update 2019-08-01</h2>



<p>I&#8217;ve got a new Github repo set up with an improved snapcraft.yaml which pulls directly from the upstream project.  I&#8217;m aiming to get this hooked up to the Snapcraft build service so that we can package the latest version automatically.  More on this later.  In the meantime, you can clone this and build the latest version yourself:</p>



<p><a href="https://github.com/8none1/cloudflarednsproxy">https://github.com/8none1/cloudflarednsproxy</a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Apache &#8211; 20 second lag before serving pages</title>
		<link>/2016/10/13/apache-20-second-lag-before-serving-pages/</link>
					<comments>/2016/10/13/apache-20-second-lag-before-serving-pages/#comments</comments>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Thu, 13 Oct 2016 10:15:09 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<category><![CDATA[Making the world a better place]]></category>
		<guid isPermaLink="false">/?p=780</guid>

					<description><![CDATA[TL;DR: Â There is no such thing as a &#8220;none&#8221; directive in Apache 2. [&#8230;]]]></description>
										<content:encoded><![CDATA[<p><strong>TL;DR</strong>: Â There is no such thing as a &#8220;none&#8221; directive in Apache 2. Â If you&#8217;ve got &#8220;deny from none&#8221; or &#8220;allow from none&#8221; then you&#8217;re doing DNS lookups on each host that connects regardless of whether you want to or not.</p>
<p>I was experiencing a very annoying problem trying to serve static HTMLÂ pages and CGI scripts from Apache 2Â recently. Â The problem manifested itself like this:</p>
<ul>
<li>Running the scripts on the server hosting Apache shows they ran in well under a second</li>
<li>Connecting to the Apache server from the LAN, everything was fine and ran in under a second</li>
<li>Connecting to the Apache server from the Internet, but from a machine known to my network, ran fine</li>
<li>Connecting from an AWS Lambda script, suddenly there is a 20 second or more delay before getting data back</li>
<li>Connecting from Digital Ocean, there is a 20 second delay</li>
<li>Connecting from another computer on the internet, there is a 20 second delay</li>
</ul>
<p>What the heck is going on here?</p>
<p>I spent time trying to debug my CGI scripts and adding lots more logging and finally convinced myself that it was a problem with the Apache config and not something like MTUs or routing problems.</p>
<p>But what was causing it? Â It started to feel like like a DNS related issue since the machines where it ran fine where all known to me, and so had corresponding entries in my local DNS server. Â But but but&#8230; I clearly had &#8220;HostnameLookups Off&#8221; in my apache2.conf file. Â When I looked at the logs again, I noticed that indeed hostnamesÂ were being looked up, even though I told it not to.</p>
<p><a href="http://whizzy.org/wp-content/uploads/2016/10/966381.jpg"><img class="aligncenter size-medium wp-image-781" src="/wp-content/uploads/2016/10/966381-300x225.jpg" alt="966381" width="300" height="225" srcset="/wp-content/uploads/2016/10/966381-300x225.jpg 300w, /wp-content/uploads/2016/10/966381.jpg 640w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Why? Â Because I don&#8217;t know how to configure Apache servers properly. Â At some point in time I thought this was a good idea:</p>
<pre style="padding-left: 90px;">Order deny, allow
Deny from none
Allow from all</pre>
<p>But, there is <span style="text-decoration: underline;">no such thing as a &#8220;none&#8221; directive</span>. Â Apache interprets &#8220;none&#8221; as a host name and so has to look it up to see if it&#8217;s supposed to be blocking it or not, which causes a DNS lookup delays and hostnames to appear in your Apache logs.</p>
<p>Enlightenment came from here:<a href="http://kb.simplywebhosting.com/idx/6/213/article/">Â http://kb.simplywebhosting.com/idx/6/213/article/</a></p>
<p>There is also a suggestion that inline comments can do the same thing here: Â <a href="https://www.drovemebatty.com/wp/entries/11">https://www.drovemebatty.com/wp/entries/11</a></p>
]]></content:encoded>
					
					<wfw:commentRss>/2016/10/13/apache-20-second-lag-before-serving-pages/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>DHCP clients not registering hostnames in DNS automatically</title>
		<link>/2016/02/17/dhcp-clients-not-registering-hostnames-in-dns-automatically/</link>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Wed, 17 Feb 2016 20:43:59 +0000</pubDate>
				<category><![CDATA[IoT]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[RaspberryPi]]></category>
		<guid isPermaLink="false">/?p=730</guid>

					<description><![CDATA[To remind myself as much as anything: I run a dnsmasq server on [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>To remind myself as much as anything:</p>
<p>I run a dnsmasq server on my router (which is a <a href="/2015/05/multipathrouting-rasppi2/">Raspberry Pi 2</a>) to handle local DNS, DNS proxying and DHCP. For some reason one of the hosts stopped registering its hostname with the DHCP server, and so I couldn&#8217;t resolve its name to an IP address from other clients on my network.</p>
<p>I&#8217;m pretty sure it used to work, and I&#8217;m also pretty sure I didn&#8217;t change anything &#8211; so why did it suddenly stop? My theory is that the disk on the client became corrupt and a fsck fix removed some files.</p>
<p>Anyway, the cause is that the DHCP client didn&#8217;t know to send it&#8217;s hostname along with the DHCP request.</p>
<p>This is fixed by creating (or editing) <code>/etc/dhcp/dhclient.conf</code> and adding this line:</p>
<p><code>send host-name = gethostname();</code></p>
<p>&nbsp;</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>My first 10 years with Ubuntu</title>
		<link>/2015/10/14/10-years-with-ubuntu/</link>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Wed, 14 Oct 2015 08:00:57 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<category><![CDATA[Ubuntu]]></category>
		<guid isPermaLink="false">/?p=685</guid>

					<description><![CDATA[Today I have had a Launchpad account for ten years! I got started [&#8230;]]]></description>
										<content:encoded><![CDATA[<p><a href="http://whizzy.org/wp-content/uploads/2015/10/IMG_1220.jpg"><img class="alignleft wp-image-691" src="http://whizzy.org/wp-content/uploads/2015/10/IMG_1220.jpg" alt="IMG_1220" width="799" height="132" srcset="/wp-content/uploads/2015/10/IMG_1220.jpg 1005w, /wp-content/uploads/2015/10/IMG_1220-300x50.jpg 300w, /wp-content/uploads/2015/10/IMG_1220-768x127.jpg 768w" sizes="(max-width: 799px) 100vw, 799px" /></a></p>
<p>Today I have had a <a href="https://launchpad.net/~willcooke">Launchpad account</a> for ten years!</p>
<p>I got started out on this road aroundÂ 1992. Â I remember the day <a href="http://www.kryogenix.org/">Stuart</a> got a PC and installed Minix on it. Â That box was biege, naturally, was about 3 feet square andÂ constructed from inch thick ironÂ plate. Â Minix was totally alien whenÂ compared to the Acorn <a href="https://en.wikipedia.org/wiki/Acorn_MOS">MOS</a> and <a href="https://en.wikipedia.org/wiki/RISC_OS">RISCOS</a> powered machines I&#8217;d used until then, and absolutely intriguing.</p>
<p>A few years laterÂ at university IÂ encountered VAX/VMS and Sun SPARCstations and The Internet and <a href="https://en.wikipedia.org/wiki/Surfers_(talker)">Surfers</a>Â and MozillaÂ and a Gopher connected Coke machine.</p>
<p>Then out into the big wide world of work and run-ins with AS400 and RS/6000s running AIX. Â During this timeÂ I started seeing more and more Red HatÂ in places where there once would have been the more establishedÂ players, providing email and web servers. Â The fascination with *nix was always there and I started using Red Hat at home for fun.</p>
<p>I quickly ran into frustrations with RPMs andÂ Stuart, always a source of wisdom, suggested I try Debian.</p>
<p>DpkgÂ made my life a whole lot easier and I started using Debian as my default OS for everything. Pretty soon after that I found myself compiling kernels, modules and software packages because I needed or wanted something in a newerÂ version.Â  Coupled with the availability of cheap unbranded webcams, sound cards, network cards, TV cards etc and a strong desire to make these things work with Linux meant that I had found a wonderful way to stay up until 4 in the morning getting more and more frustrated. Â The phrase &#8220;I&#8217;m going home to play with the kernel&#8221; was frequently questioned by my boss Jeremy. Â I wanted these things to work but was endlessly faffing about trying to make it happen.</p>
<p>Better call Stuart.</p>
<p>&#8220;You should try this new Debian based distribution called Ubuntu&#8221; he said.</p>
<p>So I did, and it just worked. Â A box fresh kernel with all the goodies I needed already compiled in and anÂ up-to-date GNOME desktop (I&#8217;d set my allegiances before tryingÂ Ubuntu so this was another tick in the box), not forgettingÂ one of the brownest themes known to man.</p>
<p>And that was that. Â UbuntuÂ worked for me and I was immediately a fan.</p>
<p>And here I am today, 10 years later, still running Ubuntu. Â My servers runÂ Ubuntu,Â all the desktops in my house runÂ Ubuntu, I have anÂ Ubuntu powered phone and soon I&#8217;ll have an Ubuntu powered Mycroft withÂ which I&#8217;ll be able to control my Ubuntu powered things whileÂ wearing my Ubuntu T shirt and drinking tea (should that be kool-aid?) from my Ubuntu mug.</p>
<p>I salute my Ubuntu brothers and sisters. Â Thanks for making all of this possible.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Multipath routing on a Raspberry Pi 2</title>
		<link>/2015/05/23/multipathrouting-rasppi2/</link>
					<comments>/2015/05/23/multipathrouting-rasppi2/#comments</comments>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Sat, 23 May 2015 13:01:00 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<category><![CDATA[RaspberryPi]]></category>
		<guid isPermaLink="false">/?p=627</guid>

					<description><![CDATA[Skill level: Â Not for the faint hearted! A few years ago, when I [&#8230;]]]></description>
										<content:encoded><![CDATA[<p><strong>Skill level:</strong> Â <em>Not for the faint hearted!</em></p>
<p>A few years ago, when I started working at home, I had a second ADSL line installed so that I could still get online if myÂ ISP had an outage. Â As well as fault tolerance I wanted to try and use all the available bandwidth rather than just have it sitting there &#8220;just in case&#8221;. Â I achieved this using multi path routing and documented the solution here: Â <a href="/2012/03/over-engineering-ftw/" target="_blank" rel="noopener noreferrer">Over Engineering FTW</a>.</p>
<p>This has been running really well on a Raspberry Pi for about 3 years (with an older kernel, see later in this post for why) but recently the SD card has started to fail. Â Although this would be easy to fix; simply replace the SD card and copy my scripts over, theÂ rural town I live in has just been upgraded to FTTC and so my connection speed has gone from about 8 Mbps to about 70 Mbps on each line. Â The first generation Pi doesn&#8217;t have enough horsepower to cope with 70 Mbps let alone 140Mbps, and indeed the ethernet interface is only 100Mbps. Â I had a Raspberry Pi 2 spare anyway so I figured I would use that and add a second gigabit NIC so I could cope withÂ the theoretical 140 Mbps connection to the internet, and since I had two NICs I might as well use both of them.</p>
<h2>Physical layout</h2>
<p>This is what I came up with:</p>
<p><a href="http://whizzy.org/wp-content/uploads/2015/05/New-network-config.png"><img class="alignleft size-medium wp-image-631" src="/wp-content/uploads/2015/05/New-network-config-267x300.png" alt="New network config" width="267" height="300" srcset="/wp-content/uploads/2015/05/New-network-config-267x300.png 267w, /wp-content/uploads/2015/05/New-network-config-768x864.png 768w, /wp-content/uploads/2015/05/New-network-config.png 849w" sizes="(max-width: 267px) 100vw, 267px" /></a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<ul>
<li>Two lines coming from the cabinet to my house, one with Plusnet and one with TalkTalk</li>
<li>The Plusnet line:
<ul>
<li>It came with an OpenReach vDSL bridge and a crappy locked down router, so I chucked the router away and used PPPoE tools to bring up theÂ PPP connection</li>
<li>The vDSL bridge talks to the Raspberry Pi over a VLAN to keep it separated from the other noise on the switch</li>
<li>Interface eth1.1000 is an unnumbered interface and ppoeconf uses a layer 2 discovery protocol to find the bridge</li>
<li>Once the PPP connection is established ppp1 can be used to route traffic to the internet</li>
</ul>
</li>
<li>The TalkTalk line:
<ul>
<li>It too came with a crappy router, but no OpenReach bridge. Â So I had to use it.</li>
<li>The TalkTalk router talks to the Raspberry Pi over VLAN 10. Â Those ports are untagged on the switch, so as far as everyone on that network knows its just a self contained LAN.</li>
<li>Interface eth0 on the Raspberry Pi has an address on that LAN and uses theÂ TalkTalk router to talk to the internet</li>
</ul>
</li>
<li>The main LAN:
<ul>
<li>Interface eth1 is usedÂ to connect to the main LAN</li>
<li>Clients on the LAN use the Raspberry Pi as their default gateway</li>
</ul>
</li>
</ul>
<p>With me so far? Â Essentially we have the normal eth0 interface of the Pi connected to one LAN withÂ its ownÂ router and eth1 (a USB gigabit ethernet adapter) has a tagged VLAN for connection to the OpenReach bridge (eth1.1000) and an untagged default network for connecting the the main LAN. Â Once the layer 2 connection with the bridge is established a PPP connectionÂ becomes the second route to the internet.</p>
<h2>The death of route caching</h2>
<p>Around version 3.6 of the Linux kernel &#8220;route caching&#8221; was <a href="http://git.kernel.org/cgit/linux/kernel/git/davem/net-next.git/commit/?id=89aef8921bfbac22f00e04f8450f6e447db13e42">removed</a>. Â With route caching in place you could set up a default route with multiple hops, something along the lines of:</p>
<p>ip route add default nexthop via 192.168.1.254 dev eth0 nexthop via 192.168.2.254 dev eth1</p>
<p>When a packet needed routing to the internet the kernel would do a round-robin selection of which route to use and then <em>remember that route</em> for a period of time. Â The upshot of this was, for example, that if you connected to www.bbc.co.uk and got routed first viaÂ 192.168.1.254 and so SNATed to 212.159.20.70 then all subsequent traffic for that destination also got routed via the sameÂ route and had the same source IP address. Â <span style="text-decoration: underline;">Without</span> route caching the next <em>packet</em> to that same destination would (probably) use the otherÂ route, and in the case of my home user scenario would arrive from a different source IP address &#8211;Â my two internet connections having different IP addresses. Â Although HTTP is a connectionless protocol this change of IP address did seem to freak some services out. Â ForÂ protocols with connections the story is worse, e.g. packets of an SSH connection would arrive at the far end from from two different IP addresses and probably get dropped. Â Route caching was a simple fix for this issue and worked well, as far as I was concerned anyway.</p>
<p>Im sure the reasons to remove it are valid, but for my simple use case it worked very well and the alternative, and now <em>only</em>Â option is to use connectionÂ marking to simulateÂ the route caching. Â When I first looked at it I wasÂ baffled and thought I would just go back to a pre 3.6 kernel and use route caching again. Â But, in the standard Raspbian distro there isn&#8217;t a kernel old enough for the Raspberry Pi 2 to make use ofÂ it.</p>
<p>So I was stuck&#8230; Â I had to use a Raspberry Pi 2 to get enough packet throughput to max out my internet connections, and I couldn&#8217;t use route caching because there wasn&#8217;t a kernel old enough. Â This meant I was going to have to either compile my own kernel or learn to use connectionÂ marking. Â Joy.</p>
<h2>Alternative projects</h2>
<p>TheÂ documentation for <a href="http://www.netfilter.org/">Netfilter</a> is extensive but I found a lot of it to be out of date and very hard to grok. Â I found a fewÂ projects who had already implemented connection tracking/markingÂ namely <a href="http://sourceforge.net/projects/humbertolj/">FWGuardian</a> and <a href="https://github.com/drsound/fault_tolerant_router">Fault Tolerant Router</a>.</p>
<p>FWGuardian is, as far as I can tell, designed for something orthogonal toÂ my set up. Â Where you might have lots of connections coming in to a server, or a number of offices which need to connect to other offices via pre-defined routes. Â I played around with it for a while, and Humberto very kindly offered me support over email, but ultimately it was too involved and complex for my needs. Â You should check out the project though if you have advanced requirements. Â It&#8217;s got some brilliant features for a more enterprise oriented setup.</p>
<p>Fault Tolerant Router is a much simpler setup and matched my requirements very closely. Â At it&#8217;s core it&#8217;s a Ruby script which can write your iptables rules and routing tables and constantly monitor the links. Â If one goes down it can dynamically rewrite your rules and direct all traffic down the working connection. Â However, it&#8217;s not expecting to use a PPP connection where gateways can change and it&#8217;s not really been tested with VLANs, although in practice it handled VLANs just fine.</p>
<p>But, at the end of the day, I wanted to learn how to do this myself and so I used the rules generated by Fault Tolerant Router to understand how connection markingÂ was supposed to work and then started to implement my own home-grown solution for teh lolz.</p>
<h2>Multi-path routing and connectionÂ marking</h2>
<p>As I understand it, the idea with connection marking, or connectionÂ tracking &#8211; I&#8217;m not sure what the difference is, is that when a new conversation starts the packets areÂ marked with an identifier. Â You can then set <em>ip rules</em> to dictate which route packets with a particular mark take. Â In essence once a new connection is established and a route selected, all other packets in that conversation take on the same mark and so the same route. Â ThisÂ emulates the route caching of the past. Â I don&#8217;t really get how, in the case of an HTTP conversation (or flow) which is connectionless,Â all the packets in theÂ conversation get marked the same. Â <a href="http://www.rigacci.org/wiki/lib/exe/fetch.php/doc/appunti/linux/sa/iptables/conntrack.html">This page</a> has some more details, but I haven&#8217;t read it properly yet. Â Anyway, we don&#8217;t know <em>HOW</em> it works, but it does. Â Good enough.</p>
<h3>IPtables</h3>
<p>First of all we need to create the iptables configuration to set upÂ connection marking. Â Here&#8217;s the relevant extract from the iptables.save file:</p>
<pre><code>*mangle
 :PREROUTING ACCEPT [0:0]
 :POSTROUTING ACCEPT [0:0]
 :OUTPUT ACCEPT [0:0]
 :INPUT ACCEPT [0:0]
 [0:0] -A PREROUTING -i eth1 -j CONNMARK --restore-mark</code>
 <code>[0:0] -A PREROUTING -i ppp1 -m conntrack --ctstate NEW -j CONNMARK --set-mark 1</code>
 <code>[0:0] -A PREROUTING -i eth0 -m conntrack --ctstate NEW -j CONNMARK --set-mark 2</code>
 <code>[0:0] -A POSTROUTING -o ppp1 -m conntrack --ctstate NEW -j CONNMARK --set-mark 1</code>
 <code>[0:0] -A POSTROUTING -o eth0 -m conntrack --ctstate NEW -j CONNMARK --set-mark 2</code></pre>
<p><span style="color: #d5d9e8;">-i = &#8211;in-interface andÂ -0 = &#8211;out-interface</span></p>
<p>These rules set a mark depending on which interface is used. Â These changes happen in the mangle table.</p>
<p>Packets going in or out the WAN via ppp1 or eth0 which are a <strong>new</strong> connection are marked with a 1 or a 2 depending on which interface they use. Â The decision about whichÂ route to useÂ isÂ done in the rules which we will see later. Â Any packets coming in to eth1, so from the LAN, have their marks restored on the way in so they can be dealt with accordingly.</p>
<p>Now let&#8217;s have a look at the filter table:</p>
<pre><code>*filter</code>
 <code>:INPUT DROP [0:0]</code>
 <code>:FORWARD DROP [0:0]</code>
 <code>:OUTPUT ACCEPT [0:0]</code>
 <code>:LAN_WAN - [0:0]</code>
 <code>:WAN_LAN - [0:0]</code></pre>
<pre><code>[0:0] -A INPUT -i lo -j ACCEPT</code>
 <code>[0:0] -A INPUT -i eth1 -j ACCEPT</code>
 <code>[0:0] -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</code></pre>
<pre><code>[0:0] -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</code>
 <code>[0:0] -A FORWARD -i eth1 -o ppp1 -j LAN_WAN</code>
 <code>[0:0] -A FORWARD -i eth1 -o eth0 -j LAN_WAN</code>
 <code>[0:0] -A FORWARD -i ppp1 -o eth1 -j WAN_LAN</code>
 <code>[0:0] -A FORWARD -i eth0 -o eth1 -j WAN_LAN</code></pre>
<pre><code>## Clamp MSS (ideal for PPPoE connections)</code>
 <code>[0:0] -I FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu</code>
 <code>[0:0] -A LAN_WAN -j ACCEPT</code>
 <code>[0:0] -A WAN_LAN -j REJECT</code></pre>
<p>The default policy is set to DROP, so any packet not matching one of the rules are dropped.</p>
<p>INPUT applies toÂ packets which are bound for the router itself. Â Packets from the local interface are allowed, and packets from eth1 (the main LAN) are also allowed.</p>
<p>FORWARDÂ applies to packets which are passing through the router on their way somewhere else. Â Packets which are known to be part of an already in-progress session are allowed. Â Packets are then categorised as LAN to WAN or WAN to LAN and dealt with by the rules LAN_WAN or WAN_LAN, getting accepted and rejected respectively. Â All this boils down to LAN clients using the Raspberry Pi as a router and so having their packets forwarded are allowed out and packets coming in from the internet are rejected, the exception being if they are part of an on-going connection.</p>
<p>Clamping MSS to MTU deals with a particular issue with using PPPoE connections where the MTU can&#8217;t be the usual 1500 bytes. Â Because a lot of ISPs block the ICMP messages that would normally deal with asking the client to send smaller packet sizes we useÂ this handy trick to make sure that packets can go out unfragmented. Â If you find that some web pages are slow to load and others are not, then try switching this on. Â If you&#8217;re only using upstream ISP provided routers you probably don&#8217;t need this.</p>
<p>Lastly in iptables we enable SNAT or masquerading so that connections out to the internet appear to come from a valid internet routable IP address not our LAN IP address:</p>
<pre><code>#SNAT: LAN --&gt; WAN</code>
 <code>[0:0] -A POSTROUTING -o ppp1 -j SNAT --to-source 212.159.20.70</code>
 <code>[0:0] -A POSTROUTING -o eth0 -j SNAT --to-source 192.168.1.253</code></pre>
<h3>Routing tables</h3>
<p>We&#8217;ve configured iptables to add a mark to trafficÂ depending on which WAN interface it isÂ going in or out of. Â But this is only marking the packets, there is no logic to make sure that packets of the same mark use the same route. Â To make this happen we use ip rules.</p>
<p>First create three new routing tables by editingÂ /etc/iproute2/rt_tables. Â I&#8217;ve added this to the bottom:</p>
<pre><code>1 plusnet</code>
 <code>2 talktalk</code>
 <code>3 loadbal</code></pre>
<p>Now we add a default route to the first two of those tables:</p>
<pre><code>ip route add default via $PPP_GATEWAY_ADDRESS dev ppp1 src 212.159.20.70 table plusnet
</code><code>ip route add default via 192.168.1.254 dev eth0 src 192.168.1.253 table talktalk</code></pre>
<p>$PPP_GATEWAY_ADDRESS is set when the PPP session is established and changes. Â We can look at ways to find that address later, but for now just substitute the &#8220;P-t-P&#8221; IP address from &#8220;<code>ifconfig ppp1</code>&#8221; or whatever your ppp interface number is, or in the case of an ISP-provided router, the LAN side IP of that router.</p>
<p>This is simply creating a routing table with the name of the ISP that will be used and a default route which can find its way to the internet for that ISP.</p>
<p>Next we create the loadbal routing table which is a combination of the previous two:</p>
<pre><code>ip route add default table loadbal nexthop via $PPP_GATEWAY_ADDRESS dev ppp1 nexthop via 192.168.1.254 dev eth0</code></pre>
<p>which is the same idea as we used in the old route caching days, a round-robin route which flicks between the two available routes to the internet.</p>
<h3>ip rules</h3>
<p>We&#8217;ve now created the iptables entries toÂ track and markÂ traffic from each of the two ISPs and add some basic firewalling and IP masquerading. Â We&#8217;ve also createdÂ a routing table for each ISP and a load-balancing table which splits the traffic betweenÂ the two ISPs.</p>
<p>Now we need to create some rules to govern which of the routing tables is used for a particular connection. Â The commands to do this are:</p>
<pre><code>ip rule add from $PPP_IPADDR table plusnet pref 40000
ip rule add from 192.168.1.253 table talktalk pref 40100
ip rule add fwmark 0x1 table plusnet pref 40200
ip rule add fwmark 0x2 table talktalk pref 40300
ip rule add from 0/0 table loadbal pref 40400</code></pre>
<p>The rules are matched in numerical order based on preference and once a rule matches that&#8217;s it. Â The first two rules make sure that traffic from the routers uses the correct table.</p>
<p>The important rules are the last three. Â Traffic which has been marked &#8220;1&#8221; will always use the plusnet routing table, traffic marked as &#8220;2&#8221; will always use the talktalk routing table. Â ThisÂ ensuresÂ that all traffic which is part of an on-goingÂ conversation will always use the same router out to the internet, and so always come from the same IP address.</p>
<p>The last rule only matches traffic which is not already marked i.e. new conversations. Â This routing table, as can be seenÂ in the previous section, has a multi-path route to balance traffic between the two routes out. Â Once a conversation is established the IPtables conntrack rules will mark the traffic and so one of the two fwmark rules will match.</p>
<p>Now delete the main default route so that the above rules don&#8217;t get bypassed with a route in the &#8220;main&#8221; table:</p>
<pre><code>ip route del default</code></pre>
<p>And that&#8217;s it. Â You should now have aÂ router whichÂ splits the traffic fairly evenly across two internet connections and keepsÂ tabs on which packets should go out of which routers. Â I&#8217;ve had this running for a month or so now, and it seems to be working fine. Â I&#8217;ve had the Pi lock up a couple of times, but I think that&#8217;s related to the USB gigabit ethernet adapter.</p>
<h2>Smart Netflix hacks</h2>
<p>Services such as <a href="https://www.unblock-us.com/">unblock-us</a> allow you to work around some geographic content blocks by acting as your DNS server and replying with the IP address of, say, the US based Netflix server instead of the UK ones. Â I&#8217;veÂ installed dnsmasq on my Pi as well and configured it to use the Unblock DNS servers instead of my ISP or Google servers. Â The clients on the LAN get their network configurationÂ over DHCP from the Pi which sets the DNS server address for the clients to the PiÂ itself whichÂ then handles DNS lookups using the Unblock servers upstream. Â This works really well for most Netflix clients but I was having a lot of problems getting the Chromecast to work with Netflix and Unblock US.</p>
<p>It turns out that Google have hard-coded it&#8217;s own DNS servers into the Chromecast and so your localÂ DNS settings are ignored. Â Nice one Google.</p>
<p>Because we&#8217;re using a Linux box as our router we can do this:</p>
<pre><code>iptables -t nat -A PREROUTING -s &lt;Netflix Client IP&gt;/32 -d 8.8.8.8 -p udp --dport 53 -j DNAT --to &lt;Alternative DNS Server IP Address&gt;
 iptables -t nat -A PREROUTING -s &lt;Netflix Client IP&gt;/32 -d 8.8.4.4 -p udp --dport 53 -j DNAT --to &lt;Alternative DNS Server IP Address&gt;</code></pre>
<p>Using the NAT table we rewrite the DNS lookup bound for Google&#8217;s DNS servers to send it to our dnsmasq server instead. lol.</p>
<h2>Spreading interrupts across cores</h2>
<p>Network cards have queues for tx and rx. Â Higher end cards will typically have more queues, but on the Pi the on-board NIC (which is actually connected via USB) has one for tx and one for rx,Â as do the VLAN interfaces and the PPP interfaces. Â Each of these queues has a CPU affinity and it seems that by defaultÂ the queuesÂ all use the same CPU core.</p>
<p>When downloading an ISO with BitTorrent andÂ the load-balancing set up I was able toÂ achieve just over 10 MBytes a second. Â But the Pi became really unresponsive. Â Looking at top showed one CPU core maxed outÂ in soft interrupts:</p>
<p><a href="http://whizzy.org/wp-content/uploads/2015/05/without_queues_spread.png"><img class="alignleft size-medium wp-image-636" src="/wp-content/uploads/2015/05/without_queues_spread-300x159.png" alt="without_queues_spread" width="300" height="159" srcset="/wp-content/uploads/2015/05/without_queues_spread-300x159.png 300w, /wp-content/uploads/2015/05/without_queues_spread-1024x544.png 1024w, /wp-content/uploads/2015/05/without_queues_spread-768x408.png 768w, /wp-content/uploads/2015/05/without_queues_spread-1536x816.png 1536w, /wp-content/uploads/2015/05/without_queues_spread-1200x638.png 1200w, /wp-content/uploads/2015/05/without_queues_spread.png 1735w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>By adjusting the CPU affinity to spread these IRQs across multiple CPUs I squeeze out a tiny bit more network throughput, but more usefully the Pi remained responsive under heavy load:</p>
<p><a href="http://whizzy.org/wp-content/uploads/2015/05/with_queues_spread.png"><img class="alignleft size-medium wp-image-637" src="/wp-content/uploads/2015/05/with_queues_spread-300x162.png" alt="with_queues_spread" width="300" height="162" srcset="/wp-content/uploads/2015/05/with_queues_spread-300x162.png 300w, /wp-content/uploads/2015/05/with_queues_spread-1024x553.png 1024w, /wp-content/uploads/2015/05/with_queues_spread-768x415.png 768w, /wp-content/uploads/2015/05/with_queues_spread-1536x830.png 1536w, /wp-content/uploads/2015/05/with_queues_spread-1200x649.png 1200w, /wp-content/uploads/2015/05/with_queues_spread.png 1902w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>The commands I used to do this are:</p>
<pre><code>echo 1 &gt; /sys/class/net/eth0/queues/rx-0/rps_cpus
echo 1 &gt; /sys/class/net/eth0/queues/tx-0/xps_cpus
echo 2 &gt; /sys/class/net/eth1/queues/tx-0/xps_cpus
echo 2 &gt; /sys/class/net/eth1/queues/rx-0/rps_cpus
echo 4 &gt; /sys/class/net/eth1.1000/queues/tx-0/xps_cpus
echo 4 &gt; /sys/class/net/eth1.1000/queues/rx-0/rps_cpus
echo 8 &gt; /sys/class/net/ppp1/queues/tx-0/xps_cpus
echo 8 &gt; /sys/class/net/ppp1/queues/rx-0/rps_cpus</code></pre>
<h2>Source</h2>
<p>Here&#8217;s a tgz file containing my iptables rules and a script to set up the above: <a href="/wp-content/uploads/2015/05/routing.tgz">routing</a></p>
<p><em><strong>Update:</strong></em> Â I&#8217;ve put the files in this Github repo: Â <a href="https://github.com/8none1/multipathrouting">https://github.com/8none1/multipathrouting</a></p>
<p>If you&#8217;re interested in helping to make the scripts a bit more generic andÂ adding fault-tolerance let me know.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2015/05/23/multipathrouting-rasppi2/feed/</wfw:commentRss>
			<slash:comments>7</slash:comments>
		
		
			</item>
		<item>
		<title>Snapping Mosquitto MQTT broker</title>
		<link>/2015/02/04/snapping-mosquitto-mqtt-broker/</link>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Wed, 04 Feb 2015 17:32:44 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<category><![CDATA[Making the world a better place]]></category>
		<category><![CDATA[RaspberryPi]]></category>
		<category><![CDATA[Ubuntu]]></category>
		<guid isPermaLink="false">/?p=598</guid>

					<description><![CDATA[As part of my ever expanding home automation system I wanted to use [&#8230;]]]></description>
										<content:encoded><![CDATA[<p style="text-align: justify;"><em>As part of my ever expanding home automation system I wanted to use MQTT to publish data on my network. With the release of the Raspberry Pi 2 I can run Ubuntu Core to create a reliable, secure and easily updated server which is a perfect fit for requirements of an MQTT broker and general HA controller. I asked some Ubuntu friends to help me package Mosquitto as a Snap, and in return I would write down how we did it. Here&#8217;s the story&#8230;</em></p>
<p>Start by reading this: <a title="https://developer.ubuntu.com/en/snappy/" href="https://developer.ubuntu.com/en/snappy/">https://developer.ubuntu.com/en/snappy/</a></p>
<p style="text-align: justify;"><span style="text-decoration: underline;">In summary;</span> a Snappy application is secure because it&#8217;s wrapped with AppArmor. It&#8217;s easier to install and upgrade because everything is packaged in a single file and installed to a single location. That location is backed-up before you install a new version, and so if the installation goes wrong you can revert to the previous version easily by copying the original files back (or rather, Snappy will do all of that for you). Simplifying things slightly there are two types of Snappy &#8220;application&#8221;: Apps and Frameworks. Frameworks can extend the OS and provide a mediation layer to access shared resources. Apps are your more traditional top-level items which can use the provided frameworks, or bundle everything they need in to their Snap. This makes things much easier for app providers because they are now in charge &#8211; they can be assured that no libraryÂ will change underneath them. Â This is a huge benefit!</p>
<h2>Let&#8217;s get Mosquitto snapped.</h2>
<h3>1. Install QEMU to run an Ubuntu Core machine</h3>
<p><a title="http://www.ubuntu.com/cloud/tools/snappy#snappy-local" href="http://www.ubuntu.com/cloud/tools/snappy#snappy-local">http://www.ubuntu.com/cloud/tools/snappy#snappy-local</a></p>
<p>First we install the KVM hypervisor:</p>
<pre style="padding-left: 60px;">sudo apt-get install qemu-kvm</pre>
<p>Then check everything is as it should be with:</p>
<pre style="padding-left: 60px;">kvm-ok</pre>
<p>Now download the latest Ubuntu Core image from here:Â <a title="http://cdimage.ubuntu.com/ubuntu-core/preview/" href="http://cdimage.ubuntu.com/ubuntu-core/preview/">http://cdimage.ubuntu.com/ubuntu-core/preview/</a>Â Â At the time of writing this is the newest x86-64 image: <a title="http://cdimage.ubuntu.com/ubuntu-core/preview/ubuntu-core-alpha-02_amd64-virt.img" href="http://cdimage.ubuntu.com/ubuntu-core/preview/ubuntu-core-alpha-02_amd64-virt.img">http://cdimage.ubuntu.com/ubuntu-core/preview/ubuntu-core-alpha-02_amd64-virt.img</a></p>
<p>Then launch the virtual machine. This command port forwards 8022 on your local machine to 22 on the virtual machine, so you can SSH to port 8022 on localhost and actually connect to the Ubuntu Core machine. It gives the Core machine 512MB of RAM, nicely achievable on a modest budget (The Pi2 has 1 GB). Â We also forward port 1883 from to the VM, whichÂ will allow us to connect to the Mosquitto server on our VM once it&#8217;s all installed.</p>
<pre style="padding-left: 60px;">kvm -m 512 -redir :8022::22 -redir :1883::1883 &lt;vm image file&gt;</pre>
<p>Once it&#8217;s booted you can connect to it with SSH. The username and password are &#8220;ubuntu&#8221;.</p>
<pre style="padding-left: 60px;">ssh -p 8022 ubuntu@localhost</pre>
<p>To make things a bit easier, why not use key authentication? On your host machine:</p>
<pre style="padding-left: 60px;">ssh-copy-id -p 8022 ubuntu@localhost</pre>
<p>We should also upgrade our Ubuntu Core VM before we start. Â SSH in to your box and run:</p>
<pre style="padding-left: 60px;">sudo snappyÂ update
sudo reboot</pre>
<h3>2.Â Build Mosquitto in the right way</h3>
<p>Back on your host (not the virtual machine you just created above) create some directories to hold the code and download the latest stable source and the build dependencies for Mosquitto:</p>
<pre style="padding-left: 60px;">sudo apt-get install build-essential cmake
sudo apt-get build-dep mosquitto</pre>
<pre style="padding-left: 60px;">mkdir -p mosquitto/install mosquitto/build</pre>
<pre style="padding-left: 60px;">cd mosquitto</pre>
<pre style="padding-left: 60px;">wget http://mosquitto.org/files/source/mosquitto-1.3.5.tar.gz</pre>
<pre style="padding-left: 60px;">tar xvzfÂ mosquitto-1.3.5.tar.gz</pre>
<pre style="padding-left: 60px;">cd build</pre>
<p>Time toÂ build Mosquitto. Â Before you run the commands below, a bit of background information. Â The cmake lineÂ will force cmake to install the binaries to the location specified with INSTALL_PREFIX, rather than /usr/local. Â This is required to bundle all of theÂ binaries and other files to the &#8220;install&#8221; directory we created above, making it possible to package as a Snappy.</p>
<pre style="padding-left: 60px;">cmake -DCMAKE_INSTALL_PREFIX=`readlink -f ../install/` ../mosquitto-1.3.5</pre>
<pre style="padding-left: 60px;">make -j`nproc`

make install</pre>
<p>nproc spits out the number of processor cores you have, so the make line above will use as many processor cores as you have available. Â It&#8217;s not required, and for Mosquitto which is fairly small it&#8217;s not worth worrying about, but for a bigger job this is quite handy.</p>
<p>If you look in the &#8220;../install&#8221; directory you&#8217;ll see a familiar structure containing all the goodies needed by Mosquitto.</p>
<h3>3.Â Find the libraries needed and copy them in to your Snappy project</h3>
<p>Change in to the install/lib directory and use ldd to display the linked libraries for the two main .so files:</p>
<pre style="padding-left: 60px;">ldd lib/libmosquitto.so.1.3.5 lib/libmosquittopp.so.1.3.5 | grep '=&gt;' | awk '{ print $1 }' | sort | uniq</pre>
<p>This uses ldd to show the libraries required by Mosquitto, and then sorts them in to a nice list.Â You&#8217;ll see something like this:</p>
<pre style="padding-left: 60px;">libcares.so.2
libcrypto.so.1.0.0
libc.so.6
libdl.so.2
libgcc_s.so.1
libmosquitto.so.1
libm.so.6
libpthread.so.0
librt.so.1
libssl.so.1.0.0
libstdc++.so.6
linux-vdso.so.1</pre>
<p>Now, on the Ubuntu Core machine we can run this little script:</p>
<pre style="padding-left: 60px;">for i in `cat`; do find /lib /usr/lib -name $i; done</pre>
<p>Copy the list from the previous command to the clipboard and then paste it in to terminal where this command is running and hit Ctrl-D to submit the list. Â The script will then search Ubuntu Core for the libraries required. Â If it finds them they will be displayed, if it doesn&#8217;t then they are not available in Ubuntu Core by default andÂ will need to be included in your Snappy package.</p>
<p><code>linux-vdso</code> is the Linux kernel and is available on every Linux system by default, so we don&#8217;t need to provide that specifically.</p>
<p><code>libssl, libcrypto, libpthread, librt, libc </code>and<code> libdl</code> are all available in Ubuntu Core by default &#8211; so we don&#8217;t need those either.</p>
<p>That leaves just <code>libcares</code> to be copied in to our package.</p>
<pre style="padding-left: 60px;">Â cp /usr/lib/x86_64-linux-gnu/libcares.so.2.1.0 .</pre>
<p>We should already be in the &#8216;lib&#8217; directory, hence the &#8216;.&#8217; above. Â We are copying libcares in to the lib directory of our Snap, and when we run the Snap we will pass in theÂ library path to make sure Mosquitto can find it. Â More on this later.</p>
<h3>4.Â Add the meta data required for the Snappy package</h3>
<p>Reference: <a title=" https://developer.ubuntu.com/en/snappy/guides/packaging-format-apps/" href="https://developer.ubuntu.com/en/snappy/guides/packaging-format-apps/">https://developer.ubuntu.com/en/snappy/guides/packaging-format-apps/</a></p>
<p>Create the meta data directory inside the install directory (change to the install directory, it should just be cd ..):</p>
<pre style="padding-left: 60px;">mkdir meta</pre>
<p>Create the package.yaml file:</p>
<pre style="padding-left: 60px;">nanoÂ meta/package.yaml</pre>
<p>And this is what we&#8217;re putting in it:</p>
<pre style="padding-left: 60px;">name: mosquitto.willcooke
architecture: amd64
version: 1.3.5
icon:
services:
 - name: mosquitto
 start: ./sbin/mosquitto.sh
ports:
 required: 1883</pre>
<p>Information about these fields and what they mean is available in the reference linked to above, but they areÂ easily understandable. Â A comment on the name though, you need to append .&lt;yournamespace&gt; where your namespace is as you select in your Ubuntu myapps account. Â One thing to mention, you can see that to start our Snap we are calling a shell script. Â This allows us to pass in extra options to Mosquitto when it runs.</p>
<p>Next we need to create a readme file:</p>
<pre style="padding-left: 60px;">nanoÂ meta/readme.md</pre>
<p>This file needs to contain at least a couple of non-blank lines. Â Here&#8217;s what we put in it:</p>
<pre style="padding-left: 60px;">This is a Snappy package for Mosquitto MQTT broker.</pre>
<pre style="padding-left: 60px;">Information about Mosquitto is available here: Â http://mosquitto.org/</pre>
<pre style="padding-left: 60px;">Information about MQTT is available here: http://mqtt.org/</pre>
<p>We also need to configure our Mosquitto server, by editing the conf file. Â Most of the settings can be left asÂ default, so we will create a new conf file with only the bits in we need.</p>
<pre style="padding-left: 60px;">mv etc/mosquitto/mosquitto.conf etc/mosquitto/mosquitto.conf.ori</pre>
<pre style="padding-left: 60px;">nanoÂ etc/mosquitto/mosquitto.conf</pre>
<p>Add these two lines:</p>
<pre style="padding-left: 60px;">user root
persistence_location /var/apps/mosquitto/current/</pre>
<p>We need to change this to run as root. Â Since our Snap will beÂ confined there is no risk here. Â I expect the ability to run as non-root users when using Snappy will be improved, but really it&#8217;s not necessary.</p>
<p>We also need to add a small shell script to start Mosquitto with the right options. Â Create a file in install/sbin called mosquitto.sh:</p>
<pre style="padding-left: 60px;">nano sbin/mosquitto.sh</pre>
<p>And add this:</p>
<pre style="padding-left: 30px;">#!/bin/sh
LD_LIBRARY_PATH=./lib:$LD_LIBRARY_PATH exec ./sbin/mosquitto -c etc/mosquitto/mosquitto.conf</pre>
<p>We are specifying where to find the extra libraries we require and where to find the conf file. Â Make that file executable:</p>
<pre style="padding-left: 60px;">chmod +x sbin/mosquitto.sh</pre>
<h3>5. Build yourÂ Snappy package</h3>
<p>Add the Snappy PPA to get the build tools, and then install them:</p>
<pre style="padding-left: 60px;">sudo add-apt-repository ppa:snappy-dev/beta
sudo apt-get update
sudo apt-get dist-upgrade
sudo apt install snappy-tools</pre>
<p>In your <code>install</code>Â directory run:</p>
<pre style="padding-left: 60px;">snappy build .</pre>
<p>If you see an error aboutÂ ImportError: No module named &#8216;click.repository&#8217; then you likely have a clash between the Click library versionÂ in the SDK team PPA and the version in the Snappy PPA. Â This will be fixed soon, but in the meantime I would suggest installing ppa-purge via apt-get and then runningÂ <code>sudo ppa-purge ppa:ubuntu-sdk-team/ppa</code>.</p>
<p>If you see an error about &#8220;expected &lt;block end&gt;&#8221; in the package.yaml check the whitespace in the file. Â It&#8217;s likely a copy and paste error.</p>
<h3>6. InstallÂ yourÂ Snappy package</h3>
<p>Once you have your .snap file you can install it to your virtual machine like this:</p>
<pre>snappy-remote --url=ssh://localhost:8022 install ./mosquitto_1.3.5_amd64.snap</pre>
<p>&nbsp;</p>
<h3>7. TestÂ yourÂ Snappy package</h3>
<p>If everything has gone to plan Mosquitto should now be running on your virtual machine. Â In order to test you&#8217;ll need to write a test Publisher and Subscriber. Â I used the Python Paho library.</p>
<p>Here&#8217;s an example Publisher:</p>
<pre style="padding-left: 60px;">#!/usr/bin/python</pre>
<pre style="padding-left: 60px;">import paho.mqtt.client as mqtt
from datetime import datetime
from time import sleep</pre>
<pre style="padding-left: 60px;">def send_mqtt(topic, message):
 log("Sending MQTT")
 log("Topic: "+topic)
 log("Message: "+message)
 mqttc.reconnect()
 mqttc.publish(topic, message)
 mqttc.loop() 
 mqttc.disconnect()</pre>
<pre style="padding-left: 60px;">print "Time server starting up...."
mqttc = mqtt.Client("python_pub")
mqttc.connect("localhost", 1883)</pre>
<pre style="padding-left: 60px;">while True:
 tstr = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
 send_mqtt("/information/time",tstr)
 sleep(10)</pre>
<p>And here&#8217;s an example Subscriber:</p>
<pre style="padding-left: 60px;">#!/usr/bin/python</pre>
<pre style="padding-left: 60px;">import paho.mqtt.client as mqtt
import datetime</pre>
<pre style="padding-left: 60px;">def on_connect(client, userdata, rc):
 print "Connected with result code "+str(rc)
 client.subscribe("#")
 
def on_message(client, userdata, msg):
 print "Topic: ", msg.topic+'\nMessage: '+str(msg.payload)
 
 
client = mqtt.Client()
client.on_connect = on_connect
client.on_message = on_message</pre>
<pre style="padding-left: 60px;">client.connect("localhost", 1883, 60)</pre>
<pre style="padding-left: 60px;">client.loop_forever()</pre>
<p>&nbsp;</p>
<h2>What&#8217;s next?</h2>
<p>We&#8217;ve built a Snappy package for amd64 (or whatever your native architecture is), but we really need to be cross-architecture to giveÂ people theÂ best choice of platform on which to useÂ the package. Â This involves cross compiling, which can be tricky to put it mildly.</p>
<p>I spoke to <a title="https://plus.google.com/+AlexanderSack/posts" href="https://plus.google.com/+AlexanderSack/posts">Alexander Sack</a>, the Director of Ubuntu Core, and asked what was coming next for Snappy and I was very excited to hear about easier cross-compilation methods as well as a cool script to help automate gatheringÂ the librariesÂ in to your package.Â  I&#8217;ll find out more about these and follow up with another post about</p>
<h2>Special Thanks</h2>
<p>A huge &#8220;Thank You!&#8221; to <a title="https://plus.google.com/113078171667682980510/posts" href="https://plus.google.com/113078171667682980510/posts">Saviq</a> and <a title="https://www.google.com/+DidierRoche" href="https://www.google.com/+DidierRoche">Didrocks</a> forÂ doing the actual work and letting me watch.</p>
<p>&nbsp;</p>
<h2>Where to get Snappy Mosquitto</h2>
<p>amd64 version: Â <a title="https://myapps.developer.ubuntu.com/dev/click-apps/ubuntu/1500/" href="https://myapps.developer.ubuntu.com/dev/click-apps/ubuntu/1500/">https://myapps.developer.ubuntu.com/dev/click-apps/ubuntu/1500/</a><br />
armhf version:Â <a title="https://myapps.developer.ubuntu.com/dev/click-apps/ubuntu/1502/" href="https://myapps.developer.ubuntu.com/dev/click-apps/ubuntu/1502/">https://myapps.developer.ubuntu.com/dev/click-apps/ubuntu/1502/</a> (please note, I haven&#8217;t been able to test the ARM version because of a lack of hardware. Â If it doesn&#8217;t work let me know and I can fix it.)</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Recording screencasts from the Unity 8 Desktop Preview</title>
		<link>/2014/08/28/recording-screencasts-from-the-unity-8-desktop-preview/</link>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Thu, 28 Aug 2014 12:33:10 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<category><![CDATA[Making the world a better place]]></category>
		<category><![CDATA[Ubuntu]]></category>
		<guid isPermaLink="false">/?p=590</guid>

					<description><![CDATA[Obtaining and running Unity 8 Desktop Preview If you like playing with new [&#8230;]]]></description>
										<content:encoded><![CDATA[<h1>Obtaining and running Unity 8 Desktop Preview</h1>
<p>If you like playing with new toys you might have already downloaded and tried the Unity 8 Desktop Preview (available here: Â <a href="http://cdimage.ubuntu.com/ubuntu-desktop-next/daily-live/current/" target="_blank" rel="noopener noreferrer">http://cdimage.ubuntu.com/ubuntu-desktop-next/daily-live/current/</a>)</p>
<p>If you haven&#8217;t, you should take it for a spin. Â If you have an Intel graphics everything should be fine and dandy, if not YMMV at the moment.</p>
<ol>
<li>Download the ISO</li>
<li>Find a spare &gt;1GB USB thumb drive</li>
<li>Run &#8220;disks&#8221; via the dash</li>
<li>Highlight your USB drive and from the cog icon on the right choose &#8220;Restore Disk Image&#8230;&#8221;</li>
<li>Select your ISO and &#8220;Start Restoring&#8221; Â &#8211; this will of course erase everything else on your USB stick</li>
<li>Done</li>
</ol>
<p>You can now boot from your USB stick and have a play with Unity 8. Â Right now you&#8217;ll be seeing the Phone view of Unity 8, but that will all beÂ changing in time.</p>
<h1>Capturing a screencast</h1>
<p>Once you&#8217;ve got everything up and running you might like to make a fewÂ screencasts, so how do you do it? Â Well, the Mir developers haveÂ provided us with the mirscreencast tool so let&#8217;s use that:</p>
<p>Switch to tty1 (ctrl+alt+f1) and log in and run:</p>
<pre>mirscreencast --file &lt;output file&gt; -m /run/lightdm-mir-0</pre>
<p>Then switch back to tty8 (ctrl-alt-f8) and use Unity.</p>
<p>Your file will now be filling up FAST. Â Mirscreencast will be trying to write every raw frame to that file, probably at a rate of 60 frames a second. Â To kill mirscreencast I first hit ctrl-z and then:</p>
<pre> pkill -9 mirscreencast</pre>
<p>but there is probably a better way.</p>
<h1>Capturing a better screencast</h1>
<p>There are a few command line options for mirscreencast which will can help us shrink the file size a bit:</p>
<pre>mirscreencast --file &lt;output file&gt; -m /run/lightdm-mir-0 -s 683 384 -n 3600</pre>
<p>The option &#8220;-s&#8221; will resize the captured frames. Â Note that 683 384 is exactly half my native resolution, so you will need to adjust this to your display.</p>
<p>The option &#8220;-n&#8221; will capture n frames and then stop. Â At 60 frames a second, 3600 framesÂ isÂ one minute. Â If you use -n then mirscreencast will exit gracefully at the end.</p>
<h1>Playing back your screencast</h1>
<p>I am lucky enough to have a spare machine with a touch screen just for running Unity 8 on (<a href="http://www.dell.com/uk/dfh/p/inspiron-11-3137/pd" target="_blank" rel="noopener noreferrer">http://www.dell.com/uk/dfh/p/inspiron-11-3137/pd</a>) so I SCP the raw video file on to my main machine for playback and editing.</p>
<p>I use mplayer for most of my video playback and encoding needs and it will happily play the raw video file, but it needs a few pointers:</p>
<pre>mplayer -demuxer rawvideo -rawvideo fps=60:w=683:h=384:format=bgra &lt;filename&gt;</pre>
<p>or, to convert the raw file into something which you can edit in OpenShot try this:</p>
<pre>mencoder -demuxer rawvideo -rawvideo fps=60:w=683:h=384:format=bgra -ovc x264 -o &lt;output filename&gt; &lt;filename&gt;</pre>
<p>And then you can edit and upload the processed file. Â When I export from OpenShot I use the &#8220;Web&#8221; profile, then target &#8220;YouTube-HD&#8221;, &#8220;HD 720p 29.97 fps&#8221; &#8220;Med&#8221; &#8211; it&#8217;s a bit overly compressed, but it looks OK.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Raspberry Pi powered heating controller (Part 1)</title>
		<link>/2014/01/04/raspberry-pi-powered-heating-controller-part-1/</link>
					<comments>/2014/01/04/raspberry-pi-powered-heating-controller-part-1/#comments</comments>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Sat, 04 Jan 2014 22:02:04 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<category><![CDATA[Making the world a better place]]></category>
		<category><![CDATA[RaspberryPi]]></category>
		<guid isPermaLink="false">/?p=509</guid>

					<description><![CDATA[In which no Raspberry Pi&#8217;s are seen. TL;DR: Â It should be fairly straight [&#8230;]]]></description>
										<content:encoded><![CDATA[<p><span style="color: #808080; font-size: medium;"><em>In which no Raspberry Pi&#8217;s are seen.</em></span></p>
<p><em><span style="text-decoration: underline;"><strong>TL;DR:</strong> </span>Â It should be fairly straight forward to add a Raspberry Pi controlled heating and hot water system to a standard UK domestic set up and, more importantly, remove it again without messing with the existing set up. Â As a minimum you&#8217;ll need a Raspberry Pi and 4 relays. Â A few other bits and bobs wouldn&#8217;t go a miss though. Â The theory checks out, I&#8217;ve ordered the bits, come back next time to see what it looks like.</em></p>
<p><span style="line-height: 1.5em;">It occurs to me that for a long time we&#8217;ve had a thermostat in our homes which switches the heating off when it gets warm enough, but wouldn&#8217;t it be just as useful to have something which turns the heating </span><strong style="line-height: 1.5em;">on</strong><span style="line-height: 1.5em;"> when it gets too cold?</span></p>
<p>This thought, together with a Raspberry Pi that wasn&#8217;t doing much and a strong desire to make my home more connected, led me to think about how I might control my heating system from, say, a smart phone. Â I&#8217;m far from being the first person to think of this idea, and there are loads of really good examples out there, but none of them did quite what I wanted in the way I wanted to do it. Â SoÂ I&#8217;m going to start from first principals and walk through this project design to try and build a removable &amp; non-destructive add-on to an existing system. Â I&#8217;m writing this at the very start of the project, so I&#8217;ve no idea if it will work, if I will break some expensive components on way to getting it working, or if I will just give up before I get to the end. Â Let&#8217;s see.</p>
<h2>Typical domestic hot water and heating systems</h2>
<p>This may be UK specific. Â Here is a very very crude diagram of a typical home set up:</p>
<p><div id="attachment_514" style="width: 238px" class="wp-caption alignnone"><a href="http://whizzy.org/wp-content/uploads/2014/01/CH-HWC-2.png"><img aria-describedby="caption-attachment-514" class="size-medium wp-image-514" src="/wp-content/uploads/2014/01/CH-HWC-2-228x300.png" alt="A crude diagram of how the central heating system works in a typical UK home." width="228" height="300" /></a><p id="caption-attachment-514" class="wp-caption-text">A crude diagram of how the central heating system works in a typical UK home.</p></div></p>
<p><span style="line-height: 1.5em;">The boiler burns gas and heats water. Â That hot water is circulated around the system (called the primary circuit) by a pump and can do three jobs. Â It can circulate through a heating element in a hot water cylinder and heat more water which is stored in the cylinder. Â Note that the water which circulates through the element does not come in to contact with the actual water it is heating, the two are keptÂ </span>separate for water quality reasons. Â The second job it can do is circulate through radiators in the home and hear the air. Â The third job is to do both. Â The hot water from the boiler moves around the primary circuit losing it&#8217;s heat to either the hot water in the cylinder or the air and eventually passes through the boiler again, heats up, and goes round and round again.</p>
<p>There are two &#8220;header&#8221; tanks of cold water in the loft. Â One is for the cold water to the bathroom for flushing the loo, filling the bath, brushing your teeth, that kind of thing. Â This tank also fills the hot water cylinder. Â The other is the header tank for the primary system and ensures that it can&#8217;t boil dry. Â Both use gravity and water pressure to make sure the water flows to where it is needed.</p>
<p>The system in the diagram is an &#8220;open&#8221; system. Â If the hot water in the cylinder gets too hot it can expand up the vent pipe and dump itself in to the cold water tank. Â The cold water tank can over flow to outside. Â If the hot water in the primary gets too hot it can expand up in to the header tank ready to be reused to fill the primary when the water cools.</p>
<p>There is such a thing as a sealed pressurised system which doesn&#8217;t have these vents. Â These are more complex and if you have one please be very careful in tinkering with the control mechanisms. Â In an open system, if you get things wrong and the boiler runs and runs you would end up with a lot of steam in the loft. Â  In a pressurised system things can go pop and blast you with boiling water. Â That said, in an open system you could still end up dumping a header tank full of boiling water down on to the bedrooms below. Â <span style="text-decoration: underline;">People have died</span> from this happening, so tinkering with the heating system is not something to be taken lightly.</p>
<p>In summary then; we have three things we can ask a system for:</p>
<ol>
<li>Make hot water</li>
<li>Heat the house</li>
<li>Make hot water and heat the house</li>
</ol>
<p>And we have a number of key elements:</p>
<ol>
<li>Boiler</li>
<li>Hot water cylinder</li>
<li>Primary header tank</li>
<li>Cold water tank</li>
</ol>
<p><span style="line-height: 1.5em; font-size: 1.5em;">Typical electrical system to control hot water and heating</span></p>
<p>Once we understand how the wet bits fit together we can take a look at the electrical components:</p>
<p><div id="attachment_518" style="width: 310px" class="wp-caption alignnone"><a href="http://whizzy.org/wp-content/uploads/2014/01/Y-Plan-Wiring.gif"><img aria-describedby="caption-attachment-518" class="size-medium wp-image-518" src="/wp-content/uploads/2014/01/Y-Plan-Wiring-300x278.gif" alt="Y Plan electrical wiring plan for central heating and hot water." width="300" height="278" srcset="/wp-content/uploads/2014/01/Y-Plan-Wiring-300x278.gif 300w, /wp-content/uploads/2014/01/Y-Plan-Wiring-768x713.gif 768w" sizes="(max-width: 300px) 100vw, 300px" /></a><p id="caption-attachment-518" class="wp-caption-text">Y Plan electrical wiring plan for central heating and hot water.</p></div></p>
<p>There are multiple &#8220;standards&#8221; for wiring up a heating system. Â You can find heaps of information on the excellent <a href="http://wiki.diyfaq.org.uk/index.php?title=Central_Heating_Controls_and_Zoning">DIY FAQ wiki</a>.</p>
<p>My system has been wired in the &#8220;Y Plan&#8221; configuration and if you have a single 3-port valve in your airing cupboard and a couple of tanks in your loft &#8211; then there is a good chance you have too. Â I will run through the wiring, and some of the inherent safety systems built in (which is why I&#8217;m keen to make sure my controller is a simple replacement for the existing controller, and is not a complete re-wire). Â Before we start though, a further word of caution. Â Mains electricity is lethal. Â You need be comfortable playing with this stuff to consider attempting anything to do with the heating system. Â It&#8217;s also probably illegal in UK due to some draconian restrictions on what a home owner can and can not do to the wiring in their own home. Â Don&#8217;t try this at home kids. Â A competent tradesman might be able to help you hook it all together.</p>
<p>The incoming mains supply goes through a double pole switch which will disconnect live and neutral when switched off. Â In this diagram, the live feed provides power to only the controller (sometimes you might see a parallel (switched and fused) connection to the boiler from that live). Â So first and foremost, all power to the <span style="text-decoration: underline;">components</span> comes through the controller. Neutral is common to pump, boiler and valve and so is earth.</p>
<p>Thermostats are placed in series for both the hot water circuits and the heating circuits. Â These will physically break the circuit when a specific temperature is reached.</p>
<p>Let&#8217;s consider this example: Â I tell the controller to heat the water. Â It connects the live feed to the &#8220;HW ON&#8221; cable via point 6 on the diagram. The current flows to the cylinder stat, which allows the current through since the temperature is lower than the trigger point it is set to. Â The pump and the boiler are connected in parallel so you can&#8217;t run the boiler with out the pump running too (at least that&#8217;s the plan), and they are provided power via the room stat to point 8 on the diagram. Â The boiler is told to turn on, and the pump moves that heated water around the system. Â The hot water reaches the three port valve. Â The valve has an electrical actuator on which moves to set position depending on what electrical connections are made to it. Â In our case, no INPUT power is being applied to the valve, so it sits in it&#8217;s default position &#8211; which just happens to be &#8220;Hot water mode&#8221;, and so the heated water from the boiler passes through the hot water cylinder only. Â When the hot water cylinder get&#8217;s to the right temperature the thermostats clicks over to the other contactor and now no power is applied to the pump and boiler via the HW ON output on the controller. Â Instead, the grey wire, point 7 on the connector, is energised. Â This tells the valve that HW is no longer required. Â This system is pretty safe, since as soon as the cylinder stat is triggered power is removed from the boiler and so it would shut down. Â Now, thermostats do fail, but they usually &#8220;fail safe&#8221;, but sometimes they don&#8217;t.</p>
<p>What if I want just the heating to run? Â The controller connects to the live input to the CH cable via point 4 on the connector. Â This passes through the room stat which will allow the current to flow if it&#8217;s below the temperature set. Â The current ends up at the valve via point 5 on the connector. Â In this case, where we only want heating, the &#8220;white&#8221; wire is live (it&#8217;s black on the diagram) and the valve connects the &#8220;white&#8221; wire to the &#8220;orange&#8221; wire which goes back to point 8 on the connector, and in turn provides power to the boiler and pump. Â At this point the &#8220;grey&#8221; wire is also energised, as the controller makes it&#8217;s &#8220;HW OFF&#8221; output live when you ask for only heating. The room stat is able to cut power to the circuit when it reaches the set temperature.</p>
<p>If we want both hot water and heating, the controller energises the &#8220;CH ON&#8221; and &#8220;HW ON&#8221; outputs. Â Here current is provided to the pump and boiler when any of the thermostats indicates that more heating is required. Â If the HW reaches it&#8217;s temperature first, then the stat energises the grey wire, which tells the valve that no more hot water is required, and so it will move to the CH ONLY position, and current will continue to be provided by the orange wire when the valve reaches the correct position. Â The heated water from the boiler will stop circulating through the hot water cylinder and go only through the radiators &#8211; concentrating the heating to where it is needed. Â Pretty neat!</p>
<p>This system strikes me as being both simple and brilliant at the same time. Â It&#8217;s also pretty safe, as long as the stats are working as they should do.</p>
<p>In summary then, the controller is able to indicate a requirement for hot water, central heating, or both by linking three outputs to live in the right sequence. Â The four states are therefore:</p>
<ol>
<li>HW OFF, CH OFF (0,0)</li>
<li>HW OFF, CH ON (0,1)</li>
<li>HW ON, CH OFF (1,0)</li>
<li>HW ON, CH ON (1,1)</li>
</ol>
<h2>Confirming my deductions</h2>
<p>I&#8217;ve looked at the plumbing, and I&#8217;ve looked at the wiring, and I&#8217;m pretty sure that I know what&#8217;s going on. Â Next thing to do is apply the scientific method and gather the evidence to back up my assumptions.</p>
<p><a href="http://whizzy.org/wp-content/uploads/2014/01/controller1.jpg"><img class="alignnone size-medium wp-image-505" title="The horrors that lurk behind the heating controller" src="/wp-content/uploads/2014/01/controller1-300x225.jpg" alt="Behind the heating controller" width="300" height="225" srcset="/wp-content/uploads/2014/01/controller1-300x225.jpg 300w, /wp-content/uploads/2014/01/controller1-1024x768.jpg 1024w, /wp-content/uploads/2014/01/controller1-768x576.jpg 768w, /wp-content/uploads/2014/01/controller1-1200x900.jpg 1200w, /wp-content/uploads/2014/01/controller1.jpg 1204w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>The first thing I did was to turn off the power to the heating system. Â I&#8217;m paranoid, so I turned it off at the fused connection to the left of the controller and also at the fuse box. Â I also wore rubber boots, and jumped in the air every time I touched a wire. Â Better safe than sorry, eh? Â And, rightly so it turns out. Â The fused connection unit did actually cut all the power to the heating system, but look carefully at the third connection from the left and you&#8217;ll see an earth wire being used to carry live current. Â This is against all the regulations. Â Whoever installed this system originally was clearly a free spirit. Â I was also quite impressed that they&#8217;d managed to squeeze all the connections in to a double gang back box. Â What a mess. Â Remember kids, only a competent person is allowed to fiddle with these things &#8211; they do a better quality job you see.</p>
<p>Looking at the zoomed in image you can see 6 terminals: Â N, L 1, 2, 3, 4.</p>
<p>N &amp; L are self explanatory. Â 2 is not connected to anything, and so I don&#8217;t need to worry about it. Â So that leaves three connections that do something (1, 3 and 4). Â Exactly what I was expecting. Â One will be CH ON, one HW ON, and one HW off. Â Which is which?</p>
<p>Looking at the back of the controller unit it&#8217;s self:</p>
<p><a href="http://whizzy.org/wp-content/uploads/2014/01/controller_rear.jpg"><img class="alignnone size-medium wp-image-507" src="/wp-content/uploads/2014/01/controller_rear-300x225.jpg" alt="Rear of heating controller" width="300" height="225" srcset="/wp-content/uploads/2014/01/controller_rear-300x225.jpg 300w, /wp-content/uploads/2014/01/controller_rear-768x576.jpg 768w, /wp-content/uploads/2014/01/controller_rear.jpg 897w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>My theory is sound! Â 1 is <strong>HW OFF</strong>, 3 is <strong>HW ON</strong>, 4 is <strong>CH ON</strong>.</p>
<p>It looks like everything is connected as I had expected, but better safe than sorry. Â Let&#8217;s do a bit more testing:</p>
<p><a href="http://whizzy.org/wp-content/uploads/2014/01/controller2.jpg"><img class="alignnone size-medium wp-image-506" src="/wp-content/uploads/2014/01/controller2-300x225.jpg" alt="Testing harness" width="300" height="225" srcset="/wp-content/uploads/2014/01/controller2-300x225.jpg 300w, /wp-content/uploads/2014/01/controller2-1024x768.jpg 1024w, /wp-content/uploads/2014/01/controller2-768x576.jpg 768w, /wp-content/uploads/2014/01/controller2.jpg 1141w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>I wired in a few bits of cable and then (not shown) removed the connections to the rest of the system (labelling where they came from when I removed them!). Â I left the L &amp; N connected. Â To recap, I <strong>removed</strong> the existing wires from 1, 3 and 4 and replaced them with my cables which came down to some screw down connector blocks. Â The reason I put connector blocks on the end was two fold. Â Firstly, to make it easier to probe with my multimeter and secondly to stop me accidentally brushing against one of the cables and giving myself a shock. Â I also labelled the permanent live with a bit of red heat-shrink, just so I don&#8217;t get confused.</p>
<p><a href="http://whizzy.org/wp-content/uploads/2014/01/controller.jpg"><img class="alignnone size-medium wp-image-508" src="/wp-content/uploads/2014/01/controller-225x300.jpg" alt="Test harness 2" width="225" height="300" srcset="/wp-content/uploads/2014/01/controller-225x300.jpg 225w, /wp-content/uploads/2014/01/controller.jpg 612w" sizes="(max-width: 225px) 100vw, 225px" /></a></p>
<p>Putting the controlled back on, I hooked up my multimeter and switched through the options to see what happens when. Â My findings are below:</p>
<table class="wp-gallery" style="border: 2px solid #000000; height: 200px; width: 200px;" border="2" cellspacing="5" cellpadding="2" align="left">
<tbody>
<tr style="background-color: #a9a8a8;">
<td></td>
<td>1</td>
<td>3</td>
<td>4</td>
</tr>
<tr style="background-color: #d9d8d8;">
<td>ALL OFF</td>
<td>0</td>
<td>0</td>
<td>0</td>
</tr>
<tr style="background-color: #a9a8a8;">
<td>HW ONLY</td>
<td>0</td>
<td style="background-color: #28f10d;">240V</td>
<td>0</td>
</tr>
<tr style="background-color: #d9d8d8;">
<td>CH ONLY</td>
<td style="background-color: #28f10d;">240V</td>
<td>0</td>
<td style="background-color: #28f10d;">240V</td>
</tr>
<tr style="background-color: #a9a8a8;">
<td>BOTH ON</td>
<td>0</td>
<td style="background-color: #28f10d;">240V</td>
<td style="background-color: #28f10d;">240V</td>
</tr>
</tbody>
</table>
<p>.</p>
<p>.</p>
<p>.</p>
<p>.</p>
<p>.</p>
<p>Exactly what I expected. Â Point 1 must, therefore be &#8220;HW OFF&#8221;, point 2 &#8220;HW ON&#8221; and point 3 &#8220;CH ON&#8221; &#8211; which they are, as we saw from the back of the controller. Â I&#8217;m now confident enough with the set up to proceed with roughing out a block diagram for the controller and ordering the parts.</p>
<p><span style="font-size: 1.5em; line-height: 1.5em;">The plan</span></p>
<p><a href="http://whizzy.org/wp-content/uploads/2014/01/heating_controller_block.png"><img class="alignnone size-medium wp-image-532" src="/wp-content/uploads/2014/01/heating_controller_block-300x192.png" alt="heating_controller_block" width="300" height="192" /></a>Â Â <a href="http://whizzy.org/wp-content/uploads/2014/01/Heating-Controller-1.png"><img class="alignnone size-medium wp-image-538" src="/wp-content/uploads/2014/01/Heating-Controller-1-300x222.png" alt="Heating Controller Crude" width="300" height="222" /></a></p>
<p>This rather unclear breadboard layout (with the awesomeÂ <a href="http://fritzing.org/home/">http://fritzing.org/home/</a>) logically lays out what I intend to do. Â I&#8217;ve also added a crude block diagram for good measure.</p>
<p>First, I will add a real-time clock module. Â They&#8217;re cheap and easy to fit. Â This will provide the Pi with a source of time when it can&#8217;t talk to NTP servers, and so it will be able to turn things on and off at the right times, even when the network connection is down.</p>
<p>Next I will add four relays. Â I will take the main 240V incoming supply out of the existing controller and put it through relay 1. Â This relay will pass the supply on to the existing controller via the &#8220;Normally Closed&#8221; relay output. Â When I switch this relay, the supply to the existing controller will be dropped, and instead routed to the other three relays which will then be able to switch this current. Â These three relays will be wired in parallel with the existing controller connections, much like in the image above showing the test harness connected in to the controller connections. Â That is to say: one relay will go to point 1, one to point 3 and one to point 4. Â The existing safety features (thermostats in series in the circuits) are un-changed and so still offer the same protection. Â In order to activate heating or hot water we switch the relays as per the table above. Â By adding my new system in parallel and being able to easily switch between the two I can bring the RasPi powered one online gradually. Â A few hours here, a few hours there. Â And once I&#8217;m happy that it&#8217;s not going to go crazy I can leave it unsupervised for longer and longer periods. Â It also means that if I update the software and break something, we can still wash.</p>
<p>I will also add a number of 1wire temperature sensors. Â I will have three on the hot water cylinder: 1 at each of the top, middle and bottom. Â This will give me insight in to how much hot water is in the cylinder, and the temperature thereof. Â This is not intended to be a safety system. Â The temperature readings from these sensors will not be relied upon to switch things off in an emergency, that will be left to the original thermostats, <em>but</em> &#8211; we could use these readings as well to help make decisions. Â I will also fit a temperature sensors in the cold water tank, the primary header tank and somewhere outside. Â This will give me insight in to a couple of things: Â Firstly, how cold is the water in the CW tank, and what is the temperature outside? Â This has a direct effect on the number of showers that can be had from a given amount of hot water at a known temperature. Useful for trending too. Â Secondly, fitting a sensor in the primary header tank can report when the header tank is getting hot. Â Really, the header shouldn&#8217;t heat up too much. Â If it does then either the system is &#8220;pumping over&#8221; &#8211; where the pump is <span style="text-decoration: underline;">forcing</span> water up the vent pipe pipe OR the water is so hot it has expanded enough to push water out of the vent, or I expect some combination of the two. Â Either situation is sub-optimal, and with a sensor in the header tank I get some visibility of what&#8217;s going on. Â I might also add a sensor to the boiler input and output, so get an idea of how much work the boiler is doing. Â Adding a sensor to each room would be a nice addition at some point too.</p>
<p>A couple of switches will be added for manually switching the hot water or heating on/off from the airing cupboard, where the current controller is situated and where the more senior visitors to Whizzy Towers will expect the heating buttons to be.</p>
<h4>Shopping list:</h4>
<ul>
<li>1 xÂ Real Time Clock. Â <a href="http://www.ebay.co.uk/itm/200929798800?ssPageName=STRK:MEWNX:IT&amp;_trksid=p3984.m1439.l2649">http://www.ebay.co.uk/itm/200929798800?ssPageName=STRK:MEWNX:IT&amp;_trksid=p3984.m1439.l2649</a></li>
<li><span style="line-height: 1.5em;">4 mains rated relays. Â </span><a style="line-height: 1.5em;" href="http://www.ebay.co.uk/itm/190950013824?var=490205033810&amp;ssPageName=STRK:MEWNX:IT&amp;_trksid=p3984.m1439.l2649">http://www.ebay.co.uk/itm/190950013824?var=490205033810&amp;ssPageName=STRK:MEWNX:IT&amp;_trksid=p3984.m1439.l2649</a><span style="line-height: 1.5em;"><br />
</span></li>
<li><span style="line-height: 1.5em;">Some 1wire temperature sensors. Â <a href="http://www.ebay.co.uk/itm/DS18S20-Temperature-Sensor-1-Wire-Dallas-Maxim-/130621920626">http://www.ebay.co.uk/itm/DS18S20-Temperature-Sensor-1-Wire-Dallas-Maxim-/130621920626</a></span></li>
<li>A few meters of 0.75mm 5 core heat resistant flex (typeÂ 3095Y). Â <a href="http://www.ebay.co.uk/itm/5-Core-Heat-Resistant-Flex-Electrical-Cable-3095Y-0-75mm-/310663083027?pt=UK_BOI_Electrical_Components_Supplies_ET&amp;var=&amp;hash=item4854f67413">http://www.ebay.co.uk/itm/5-Core-Heat-Resistant-Flex-Electrical-Cable-3095Y-0-75mm-/310663083027?pt=UK_BOI_Electrical_Components_Supplies_ET&amp;var=&amp;hash=item4854f67413</a></li>
<li>A short bit of twin brown and earth for the connections between the 1st relay and the original controller live input.</li>
<li>A 4k7 resistor</li>
</ul>
<p>Couple that with a few odd bits of wire, some LEDs a bit of Python and we should have ourselves a Raspberry Pi powered heating and hot water controller which is relatively safe, easy to remove and cheap to build. Â Let&#8217;s see what happens when all the bits turn up. Â Should be here in a week or so.</p>
<p>Stay tuned.</p>
<h2>Further Updates</h2>
<ol>
<li><a title="Raspberry Pi powered heating controller (Part 2)" href="/2014/01/raspberry-pi-powered-heating-controller-part-2/">Part 2</a></li>
<li><a title="Raspberry Pi powered heating controller (Part 3)" href="/2014/01/raspberry-pi-powered-heating-controller-part-3/">Part 3</a></li>
<li><a title="Raspberry Pi powered heating controller (Part 4)" href="/2014/02/raspberry-pi-powered-heating-controller-part-4/">Part 4</a></li>
</ol>
]]></content:encoded>
					
					<wfw:commentRss>/2014/01/04/raspberry-pi-powered-heating-controller-part-1/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
			</item>
		<item>
		<title>Combining MythTV and Asterisk</title>
		<link>/2013/12/15/combining-mythtv-and-asterisk/</link>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Sun, 15 Dec 2013 10:56:04 +0000</pubDate>
				<category><![CDATA[asterisk]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[tv]]></category>
		<guid isPermaLink="false">/?p=468</guid>

					<description><![CDATA[I&#8217;ve had this idea for a while and with the discovery of the [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>I&#8217;ve had this idea for a while and with the discovery of the Google Text-to-speech and Voice Recognition AGI scripts from Zaf (<a href="http://zaf.github.io/asterisk-googletts/">http://zaf.github.io/asterisk-googletts/</a>Â &amp;Â <a href="http://zaf.github.io/asterisk-speech-recog/">http://zaf.github.io/asterisk-speech-recog/</a>) I&#8217;ve implemented a quick proof-of-concept.</p>
<p>You can see the results in this YouTube video:</p>
<p><iframe width="770" height="433" src="https://www.youtube.com/embed/7DMeRVU9hik?feature=oembed" frameborder="0" allowfullscreen></iframe></p>
<p>Over the next few days I&#8217;ll tidy up the code and write up a blog post about how to do it. Â It&#8217;s pretty straight forward though, using APIs provided by Google, MythTV and Asterisk and then just glueing them together.</p>
<p>&nbsp;</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Convincing MythTV to tune in to DVB-T2 MUXes</title>
		<link>/2013/11/25/convincing-mythtv-to-tune-in-to-dvb-t2-muxes/</link>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Mon, 25 Nov 2013 19:09:38 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<category><![CDATA[tv]]></category>
		<guid isPermaLink="false">/?p=452</guid>

					<description><![CDATA[So that I remember for next time, and so I can start writing [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>So that I remember for next time, and so I can start writing down some of the issues I&#8217;ve had to sort out since re-building my servers, here is what you have to do to tune to a DVB-T2 mux in MythTV (0.27 fixes).</p>
<p>This is the frequency for the PSB3 mux on Sandy Heath, I expect the encoding scheme will work pretty much where ever. At the very least it should get you started:</p>
<p>&nbsp;</p>
<pre>Frequency:  474200000
Bandwidth:  8 MHz
Inversion:  Auto
Constellation:  QAM 256
LP Coderate: 2/3
HO Coderate: Auto
Trans. Mode: 8K
Guard Interval: 1/32
Hierarchy:  None</pre>
<p>If that doesn&#8217;t work, and you know it should (as in you are on the same transmitter) try setting the tuning timeouts higher. Also, just blindly re-trying because &#8220;WHY DOESN&#8217;T IT WORK&#8221; seemed to help.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Device control over HDMI via CEC.  libcec FTW.</title>
		<link>/2012/11/26/device-control-over-hdmi-via-cec-libcec-ftw/</link>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Mon, 26 Nov 2012 15:28:18 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<category><![CDATA[Making the world a better place]]></category>
		<category><![CDATA[tv]]></category>
		<guid isPermaLink="false">/?p=425</guid>

					<description><![CDATA[Blimey, it&#8217;s been a while. Â I&#8217;ve been a bit busy, and let&#8217;s be [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Blimey, it&#8217;s been a while. Â I&#8217;ve been a bit busy, and let&#8217;s be honest; writing up blog posts always sounds like a good idea, but when you get in to it &#8211; it&#8217;s really hard work.</p>
<p>Anyway &#8211; I finally got round to buying a Pulse-Eight CEC to USB adapter: Â <a href="http://www.pulse-eight.com/store/products/104-usb-hdmi-cec-adapter.aspx">http://www.pulse-eight.com/store/products/104-usb-hdmi-cec-adapter.aspx</a></p>
<p>This awesome little box of tricks makes up for the lack of CEC control in the vast majority of HDMI-OutÂ equippedÂ graphics cards. Â It&#8217;s the final piece in the jigsaw of a Linux based home entertainment device. Â It allows you to talk to the other devices in your HDMI network; your surround sound amplifier and your big screen TV being the best examples (assuming they support CEC of course).</p>
<p>CEC has been around for a long time but for some reason itÂ doesn&#8217;tÂ seem to be widely used, or very well implemented, in most consumer electronics devices. Â It&#8217;s a published standard but with OEMÂ manufacturersÂ wanting toÂ differentiateÂ their products and introduce a bit of vendor lock-in, they all call it something different. Â The fact isÂ that your Toshiba Regza Link TV will talk to your Sony Bravia Link Amp just fine, for the most part. Â There might be a couple of proprietary things which don&#8217;t work, but on, off, volume up, volume down etc will all just work.</p>
<p>Pulse Eight&#8217;s USB to CEC adapter lets your computer get in on the act too, and opens up a whole realm of automatic switching, which really cuts down on the number of remote controls you need and the number of buttons you have to remember the purpose of.</p>
<p>The good folk at Pulse Eight have also made libCEC, an open source library to allow pretty much any software to take advantage of the USB adapter. Â <a href="http://libcec.pulse-eight.com/">http://libcec.pulse-eight.com/</a></p>
<p>It comes with C++, C and .NET interfaces, and a CLI utility called cec-client. Â XBMC &amp; MythTV already support libCEC and have some neat features baked right in. Â It&#8217;s good, but it&#8217;s not exactly what I was looking for &#8211; I want a bit more control.</p>
<p>Now, I don&#8217;t know anything about C++ or C or .NET, so until someone writes some Python bindings, my ticket to this party lies solely with the CLI utility cec-client. Â It can do most things on the &#8220;transmit&#8221; side, so you can send commands to your other CEC devices fairly easily. Â Acting on a request, or listening to the CEC traffic is a bit more complex &#8211; but not beyond the realms of possibility.</p>
<p>This weekend I wrote (and rewrote and rewrote) a couple of Bash scripts to:</p>
<ul>
<li>Let me control the system volume (i.e. the real hardware, not the mixer on the computer) on the TV &amp; Amp from the PCs remote control</li>
<li>Let me switch the TV &amp; Amp on and off</li>
<li>Activate proper muting, again not the mixer on the computer &#8211; the hardware itself</li>
<li>Switch the amp &amp; TV to my MythTV PC</li>
<li>Power off all the hardware when the PC suspends, and then switching it all back on again</li>
<li>Shut the whole lot down when the screensaver on the PC kicks in.</li>
</ul>
<p style="text-align: left;">I make these scripts available for your amusement:</p>
<div>
<ul>
<li><a href="/wp-content/uploads/2012/11/cecserver.sh_.txt">cecserver.sh</a></li>
<li><a href="/wp-content/uploads/2012/11/cecsimple.sh_.txt">cecsimple.sh</a></li>
</ul>
</div>
<p>cecsimple is a client of the &#8220;server&#8221; which itself is a client of cec-client. Â Fire up the server and then issue it commands down the FIFO either directly or via the abstraction layer which is cecsimple.sh.</p>
<p>&nbsp;</p>
<p>I hooked up the volume control and amp power via &#8220;irexec&#8221; and lirc. Â I tell irexec to execute, for example, &#8220;cecsimple.sh volup&#8221; or &#8220;cecsimple.sh ampon&#8221;. Â If the server component is already running then these commands are sent very quickly and you don&#8217;t really notice the lag.</p>
<p>To switch the TV off when the PC goes in to suspend mode I added a script in /etc/pm/sleep.d which calls &#8220;cecsimple.sh tvoff&#8221; and then &#8220;cecsimple.sh tvon&#8221; when it resumes. Â In theory if the TV is using the Amp to output surround sound audio then the TV will tell the Amp to turn off, it it&#8217;s not &#8211; it wont.</p>
<p>To switch things off when the screensaver kicks in, I simply &#8220;sudo pm-suspend&#8221; from an &#8220;xscreensaver-command -watch&#8221; script.</p>
<p>&nbsp;</p>
<p>The practicalÂ upshot is that I can now control 99% of my media centre from a single remote control. Â I&#8217;ve opted to use the remote connected to the PC as I found it to be the least laggy &#8211; using the TV remote to send up/down/left/right etc to the PC was sluggish.</p>
<p>&nbsp;</p>
<p>I think it should be possible to parse the log output from cec-client and write a &#8220;listener&#8221; component too, but it&#8217;s probably a better idea to learn some rudimentary C and do it properly. Â Or some Python bindings. Â Oh yeah, and you know what would be really cool, a hook in to MythTV so that when I&#8217;m watching something in surround sound the amp turns on automatically. That would be cool.</p>
<p>&nbsp;</p>
<p>UPDATE 3 Dec 2013: Â When someone leaves the amp&#8217;s HDMI switch set on the PS3 and you switch the MythTV box on from the remote, the amp doesn&#8217;t automatically switch to MythTV. Â This has been annoying me for a while now, so I fixed it.</p>
<p>In the scripts linked to above the &#8220;active source&#8221; command does this:</p>
<pre>send_command "tx 45 82 11 00"</pre>
<p>4 (the MythTV device) to 5 (the amp) &#8211; 82 (switch active source) to 1.1.0.0 &#8211; but my Sony amp just ignores this request.</p>
<p>I spent some time trying out a few alternatives with cec-client and I&#8217;ve found one which works, and it kinda makes sense why:</p>
<pre>send_command "tx 45 70 11 00"</pre>
<p>4 (MythTV) to 5 (Sony amp) 70 (System Audio Mode) 1.1.0.0 (the input where MythTV is connected)</p>
<p>My assumption is that amp only speaks &#8220;system audio&#8221; &#8211; what with it being an amp. Â I&#8217;ve changed the &#8220;activesrc&#8221; with the 45:70:11:00 code and now it works! Â (It also switches the amp on, whether I like it or not &#8211; so it&#8217;s not perfect).</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Useful links:</p>
<ul>
<li><a href="http://www.cec-o-matic.com/">http://www.cec-o-matic.com/</a></li>
<li><a href="http://www.jwz.org/xscreensaver/man3.html">http://www.jwz.org/xscreensaver/man3.html</a></li>
<li><a href="https://github.com/Pulse-Eight/libcec">https://github.com/Pulse-Eight/libcec</a></li>
</ul>
<p>&nbsp;</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Over engineering FTW</title>
		<link>/2012/03/08/over-engineering-ftw/</link>
					<comments>/2012/03/08/over-engineering-ftw/#comments</comments>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Thu, 08 Mar 2012 20:26:37 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<category><![CDATA[Making the world a better place]]></category>
		<guid isPermaLink="false">/?p=383</guid>

					<description><![CDATA[Working from home has many advantages. Â No commuting, relaxed approach to being dressed, [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Working from home has many advantages. Â No commuting, relaxed approach to being dressed, loud music.</p>
<p>One of the drawbacks however, is that you are entirely reliant on your broadband connection. Â You could, as many do, have a 3G modem/phone as a backup. Â Fine for a few hours, but you&#8217;re soon going to run in to data caps, invisible proxies and traffic shapers (more so than a fixed line telco).</p>
<p>&nbsp;</p>
<p>So what to do? Â My solution has been to get a second line installed. Â The big UK telcos are running a lot of offers at the moment to try and secure as many customers as they can in readiness for their Triple &amp; Quadruple PlayÂ strategies. Â This means you can get a reasonable ADSL line and line rental for about 15 to 20 quid a month.</p>
<p>When you&#8217;re as reliant on a connection as I am, that&#8217;s money well spent. Â It also gives you a perfect opportunity to play with some new toys!</p>
<p>Now, you could simply plug in another wifi router to the new line, and when the primary connection fails move your connections over to the secondary one. Â But where&#8217;s the fun in that? Â What you <em><strong>really</strong></em> want to do is some load-balancingÂ and multi-path routing over both the lines. Â You won&#8217;t see a sudden doubling in download speeds in normal browsing, but certain activities which open a lot of connections to different IP address should benefit, <em><strong>and</strong></em> you get to play with routing tables.</p>
<p>Here&#8217;s what it looks like:</p>
<p><a href="http://whizzy.org/wp-content/uploads/2012/03/Networksetup.png"><img class="alignnone size-medium wp-image-385" title="Networksetup" src="/wp-content/uploads/2012/03/Networksetup-300x88.png" alt="" width="300" height="88" srcset="/wp-content/uploads/2012/03/Networksetup-300x88.png 300w, /wp-content/uploads/2012/03/Networksetup-768x227.png 768w, /wp-content/uploads/2012/03/Networksetup.png 956w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>&nbsp;</p>
<p>We don&#8217;t really get much diversity until we get south of the exchange, and even then we&#8217;re probably going to live in the same fibre all the way to The Internet, but we do work round the much more common problem of ISP configuration errors.</p>
<p>Here&#8217;s how it works:</p>
<p>Router 1 (R1) and Router 2 (R2) are twoÂ independentÂ ADSL modem/routers Â connected to a phone line each and the ethernet port connected to a NIC in a server. Â These modem/routers also take care of NAT, so that any traffic coming from inside your network will be translated to appear as if it had come from the appropriate router on it&#8217;s way to the rest of the internet. Â The server has three NICs in total, one each for the two routers and one back to the LAN for everyone else on the network to use as a gateway.</p>
<pre>$IF0 = eth0
$IF1 = eth1
$IF2 = eth2</pre>
<p>The IP addresses associated with those interfaces are:</p>
<pre>$IP0 = 192.168.3.100
$IP1 = 192.168.1.1
$IP2 = 192.168.2.1</pre>
<p>The routers are configured with these LAN IPs:</p>
<pre>$P1 = 192.168.1.254
$P2 = 192.168.2.254</pre>
<p>As you can see on the diagram, the networks are all /24 (255.255.255.0) which gives us network numbers of:</p>
<pre>$P0_NET = 192.168.3.0
$P1_NET = 192.168.1.0
$P2_NET = 192.168.2.0</pre>
<p>Then we configure the Ubuntu box as a router &amp; NATing gateway:</p>
<p>1. Â Enable IP forwarding by editing<em> /etc/sysctl.conf</em> and uncommenting or adding a line like this:</p>
<pre>net.ipv4.ip_forward=1</pre>
<p>2. Â Create two new routing tables. Â Edit /etc/iproute2/rt_tables and add a line for each of your providers. Â For example:</p>
<pre>1 my_isp_name
2 my_other_isp_name</pre>
<p>3. Create some routes in each of the routing tables so the server knows where to send data. Â They take the general format of:</p>
<pre>ip route add <em>$P1_NET</em> dev <em>$IF1</em> src <em>$IP1</em> table my_isp_name
ip route add default via <em>$P1</em> table my_isp_name
ip route add <em>$P2_NET</em> dev <em>$IF2</em> src <em>$IP2</em> table my_other_isp_name
ip route add default via <em>$P2</em> table my_other_isp_name</pre>
<p>&nbsp;</p>
<p>Using the real numbers and the template above gives us this actual set of commands:</p>
<pre>ip route add 192.168.1.0 dev eth1 src 192.168.1.1 table my_isp_name
ip route add default via 192.168.1.254 via eth1 table my_isp_name
ip route add 192.168.2.0 dev eth2 src 192.168.2.1 table my_other_isp_name
ip route add default via 192.168.2.254 via eth1 table my_other_isp_name</pre>
<p>&nbsp;</p>
<p>In english, that means: Â In order to send traffic to the 192.168.1.0 network or the 192.168.2.0 network send it out of eth1 or eth2 from IP address 192.168.1.1 or 192.168.2.1. Â These routes are then stored in the relevent routing table; either one called my_isp_name or one called my_other_isp_name.</p>
<p>&nbsp;</p>
<p>4. Create some additional routes for communicating between the routing tables and the local interfaces. Â This is as much of an efficiency saving as anything, telling each routing table the quickest way to the other interfaces.</p>
<pre>ip route add <em>$P0_NET</em> dev $IF0 table my_isp_name
ip route add <em>$P2_NET</em> dev <em>$IF2</em> tableÂ my_isp_name
ip route add 127.0.0.0/8 dev lo tableÂ my_isp_name
ip route add <em>$P0_NET</em> dev <em>$IF0</em> tableÂ my_other_isp_name
ip route add <em>$P1_NET</em> dev <em>$IF1</em> tableÂ my_other_isp_name
ip route add 127.0.0.0/8 dev lo tableÂ my_other_isp_name</pre>
<p>5. Â Add the routes to the main routing table, so that traffic knows how to find the networks which have the gateways to the internet on:</p>
<pre>ip route add <em>$P1_NET</em> dev <em>$IF1</em> src <em>$IP1</em>
ip route add <em>$P2_NET</em> dev <em>$IF2</em> src <em>$IP2</em></pre>
<p>6. Â Apply the correct routing rules depending on where the traffic is coming from:</p>
<pre>ip rule add from <em>$IP1</em> table my_isp_name
ip rule add from <em>$IP2</em> table my_other_isp_name</pre>
<p>7. Â The science bit. Â Create a route which will send traffic down each of the internet connections in turn. Â This is a global default route, so any traffic which isn&#8217;t bound for the local <em>$P0_NET</em> network will use this rule to get to the internet.</p>
<pre>ip route add default scope global nexthop via <em>$P1</em> dev <em>$IF1</em> weight 2 nexthop via <em>$P2</em> dev <em>$IF2</em> weight 1</pre>
<p>As you can see, this isn&#8217;t a 50/50 split. Â We&#8217;ve applied some weighting, in this case because I get more GBs with my_isp_name. Â We&#8217;re actually going to send twice as much traffic down <em>$IF1</em> as we are down <em>$IF2</em>.</p>
<p>8. Â By default, routes to other networks are cached for 10 mins. Â This means that once a route is decided on, traffic will always follow the same route for at least the next 10 minutes. Â The counter will be reset every time that particular route is used. Â This is great for large downloads because it means that your IP address isn&#8217;t suddenly going to change half way through getting the file. Â But, for something like IRC where it&#8217;s possible that no traffic will be sent for 10 minutes, then the IRC server could well see your IP address changing as traffic flips between the two routes. Â IRC servers don&#8217;t like that. Â So you need to fix some routes so that traffic will always follow the same path.</p>
<pre>ip route add 174.143.119.91/32 via <em>$P2</em></pre>
<p>This sets the route to a specific Freenode IRC server to always go via my_other_isp_name.</p>
<p>9. Â Last of all, we need to add an extra layer of NAT so that traffic can find its way back to the host on the LAN side. Â This is necessary because our internet modem/routers are not really routers at all. Â They simply take traffic from one side, rewrite the headers and push it out theÂ other side, while maintaining a look up table of what came from where and doing the reverse when a reply arrives. If you can configure the routes on to your modem, then you don&#8217;t need to be reading this in the first place, so let&#8217;s assume you can&#8217;t.</p>
<pre>iptables --table nat --append POSTROUTING --out-interface $IF1 -j MASQUERADE
iptables --table nat --append POSTROUTING --out-interface $IF2 -j MASQUERADE
iptables --append FORWARD --in-interface $IF0 -j ACCEPT</pre>
<p>For things like port forwarding you do now have to deal with a bit of an odd NAT situation. Â For example, let&#8217;s assume I want to run a web server on the same machine that runs the routing. Â I decide to only make the server available on the WAN IP address of $R1. Â I set up Router 1 to NAT port 80 on the WAN to port 80 on $IP1. Â Then I need to configure the web server on the routing server to listen on that interface. Â Not too bad really.</p>
<p>And there you have it. Â Two internet connections, both available to all the clients on your network. Â Make sure that your clients use the IP address of the server as their default gateway and everything should just work. Â The additional load on the server isÂ negligible.</p>
<p>If you reboot the server you&#8217;ll need to add all the routing information again, so create yourself a Bash and have it run from /etc/rc.local or something.</p>
<p>&nbsp;</p>
]]></content:encoded>
					
					<wfw:commentRss>/2012/03/08/over-engineering-ftw/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
			</item>
		<item>
		<title>NOOP scheduler &#8211; not worth it for SSD</title>
		<link>/2011/08/16/noop-scheduler-not-worth-it-for-ssd/</link>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Tue, 16 Aug 2011 09:45:33 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<guid isPermaLink="false">/?p=359</guid>

					<description><![CDATA[I&#8217;ve got a new Thinkpad X220i with a 128GB SSD. Reading around the [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>I&#8217;ve got a new Thinkpad X220i with a 128GB SSD.</p>
<p>Reading around the internet I found a lot of stuff about squeezing a bit more throughput from your drive.</p>
<p>I did a couple of benchmarks in Ubuntu 11.04:</p>
<ul>
<li>Adding noatime,discard to /etc/fstab</li>
</ul>
<p><span style="text-decoration: underline;"><strong>Result:</strong></span> Â No change. Â Not better or worse, but in theory the &#8220;discard&#8221; will help in the long term</p>
<p><span style="text-decoration: underline;"><strong>Decision:</strong></span> Â Switch this on.</p>
<ul>
<li>Setting the scheduler to noop in /etc/rc.local</li>
</ul>
<p><span style="text-decoration: underline;"><strong>Result:</strong></span> Average read rate increased by 2MB/s but Average access time went from 0.2ms to 0.3 ms. Â In itself that&#8217;s not a real problem, but the graphs show a different picture.</p>
<p><span style="text-decoration: underline;">Without NOOP</span></p>
<p>Note the scale on the right hand side.</p>
<p><a href="http://whizzy.org/wp-content/uploads/2011/08/without_noop.png"><img class="alignnone size-medium wp-image-362" title="without_noop" src="/wp-content/uploads/2011/08/without_noop-300x193.png" alt="" width="300" height="193" /></a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="text-decoration: underline;">With NOOP</span></p>
<p><a href="http://whizzy.org/wp-content/uploads/2011/08/with_noop.png"><img class="alignnone size-medium wp-image-361" title="with_noop" src="/wp-content/uploads/2011/08/with_noop-300x195.png" alt="" width="300" height="195" /></a></p>
<p>The access speed is all over the place.</p>
<p><span style="text-decoration: underline;"><strong>Decision:</strong></span> Â Switch this off</p>
<p>&nbsp;</p>
<p>I&#8217;d be interested in hearing if your experience differs, but it seems to me that &#8220;Doing nothing&#8221; is a valid choice. Â Ubuntu, out of the box, doesn&#8217;t really require any fettling in order to get the best from your SSD.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Trimming Freesat Channels In MythTV</title>
		<link>/2011/06/08/trimming-freesat-channels-in-mythtv/</link>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Wed, 08 Jun 2011 12:42:58 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<category><![CDATA[Making the world a better place]]></category>
		<category><![CDATA[tv]]></category>
		<guid isPermaLink="false">/?p=342</guid>

					<description><![CDATA[There are loads and loads of free-to-air channels available on the Astra 28 [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>There are loads and loads of free-to-air channels available on the Astra 28 constellation, the vast majority of which I do not watch.</p>
<p>So to make things a bit easier for me after a full re-scan, I&#8217;ve put together a list of the channels I don&#8217;t watch and with a tiny bit of SQL I can trim them from my channel list.</p>
<p>To make things a bit easier for <em>you</em> here is a SQL dump of my &#8220;unwatched channels&#8221; list:</p>
<p><a href="/wp-content/uploads/2012/08/unwatched_channels.sql_.txt">unwatched_channels.sql</a></p>
<p>And here is the SQL to trim these from your channel list:</p>
<p><code>update channel set visible=0,useonairguide=0 where name in (select name from unwatched_channels)</code></p>
<p>You&#8217;ll probably want to edit that list yourself to remove and add the channels as you prefer. Generally speaking, my list trims:</p>
<ul>
<li>Regional variations</li>
<li>Specialist interest</li>
<li>Shopping</li>
<li>Games and other text based services</li>
</ul>
<p>I&#8217;ll update this list occasionally, this page will always have my most up to date information.</p>
<ul>
<li>UPDATE: 6 Sept 11. Â Refreshed channel list</li>
<li>UPDATE: 8 Oct 11. Refreshed channel list</li>
<li>UPDATE: 14 Dec 2011. Â Refreshed channel list</li>
<li>UPDATE: 4 Aug 2012. Â Refreshed channel list</li>
<li>UPDATE: 29 Dec 2013. Â New list of channel IDs available here:Â <a href="http://whizzy.org/wp-content/uploads/2013/12/unwatched_by_chanid.csv">unwatched_by_chanid</a>. Â Add a new table and import that CSV file. Â Then do a &#8220;update channel set visible=0 where chanid in (select chanid from &lt;your new table&gt;&#8221;</li>
</ul>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>g729 in Asterisk</title>
		<link>/2011/02/13/g729-in-asterisk/</link>
					<comments>/2011/02/13/g729-in-asterisk/#comments</comments>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Sun, 13 Feb 2011 17:29:25 +0000</pubDate>
				<category><![CDATA[asterisk]]></category>
		<category><![CDATA[linux]]></category>
		<guid isPermaLink="false">/?p=317</guid>

					<description><![CDATA[I run Asterisk 1.8 at home for my own amusement.Â  I&#8217;ve just got [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>I run Asterisk 1.8 at home for my own amusement.Â  I&#8217;ve just got a SIP trunk running again to <a href="http://www.sipgate.co.uk/">SIPGate</a> which had stopped running for some reason.Â  I&#8217;d set the DID for the SIPGate number to check for faxes and then, if it&#8217;s not a fax, go to my MOH application, but for some reason it didn&#8217;t work.</p>
<p>I also couldn&#8217;t access voicemail from the SIPGate trunk either, but I could get it to work with a phone connected to an ATA.</p>
<p>I had a look in the logs:</p>
<blockquote>
<pre>channel.c: Unable to find a codec translation path from 0x100 (g729) to 0x40 (slin)</pre>
</blockquote>
<p>Since slin is, I think, the Asterisk native format this is quite bad.Â  My assumption is that SIPGate sends through G.729 encoded audio regardless of whether you want it to or not (as configured in your allow/disallow lines for the SIP trunk PEER).</p>
<p>G729 from SIPGate works to the ATA because the ATA supports G729 and G729 to G729 pass-through works without any extra requirements from Asterisk.</p>
<p>So &#8211; in order to get SIPGate to Asterisk apps working again I installed the G729 codec binaries from here:</p>
<p><a href="http://asterisk.hosting.lv/">http://asterisk.hosting.lv/</a></p>
<p>and restarted Asterisk.Â  Now a:</p>
<pre>         core show translations</pre>
<p>shows I can convert between G729 and loads of other codecs.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2011/02/13/g729-in-asterisk/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
		<item>
		<title>Getting NUT to talk to LiebertPSP UPS</title>
		<link>/2010/10/06/getting-nut-to-talk-to-liebertpsp-ups/</link>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Wed, 06 Oct 2010 16:17:07 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<guid isPermaLink="false">/?p=297</guid>

					<description><![CDATA[I got hold of a couple of LiebertPSP UPSes and connected to my [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>I got hold of a couple of LiebertPSP UPSes and connected to my servers. Â They&#8217;re perfectly good for what I need them for, namely stopping my servers having the rug pulled out from underneath them with no notice if there is a power cut.</p>
<p>They don&#8217;t appear to have advancedÂ functionsÂ like switching off the loadÂ independentlyÂ of the supply which means you can&#8217;t power down the servers and then have the UPS switch them back on again once the power is restored and the battery has had a chance to charge, but I can live without that sort of thing.</p>
<p>I assumed that something somewhere would support these, and for the most part NUT does a bang up job. Â It&#8217;s a bit advanced for my needs but most of the work has already been done. Â In NUT the LiebertPSP is sort-of-supported by the Belkin USB driver with a few notable exceptions:</p>
<ul>
<li>The Online/On Battery indication doesn&#8217;t work</li>
<li>The numeric values don&#8217;t work for things like Output Voltage</li>
</ul>
<p>The numbers I can live without but the Online / On Battery is really rather important.</p>
<p>So I&#8217;ve cobbled together a new sub-driver using the tools supplied with Nut. Â It&#8217;s far from complete but it does fix most of the annoying problems.</p>
<p><a href="/wp-content/uploads/2010/10/liebertpsp.tar.gz">/wp-content/uploads/2010/10/liebertpsp.tar.gz</a></p>
<p>You&#8217;ll need to download the Nut source and put the .c and .h files in the above tarball in to the drivers directory, then you&#8217;ll need to apply this patch in the drivers directory to get the new driver included in the build and to stop the native Belkin driver from claiming the ID of the LiebertPSP:</p>
<p><a href="/wp-content/uploads/2010/10/liebertpsp.diff">/wp-content/uploads/2010/10/liebertpsp.diff</a></p>
<p>Then recompile Nut.</p>
<p>If everything works you should see a bit more info from your UPS:</p>
<pre>battery.type: PbAc</pre>
<pre>device.mfr: Emerson Network Power</pre>
<pre>device.model: LiebertPSP</pre>
<pre>device.serial:</pre>
<pre>device.type: ups</pre>
<pre>driver.name: usbhid-ups</pre>
<pre>driver.parameter.bus: 004</pre>
<pre>driver.parameter.pollfreq: 30</pre>
<pre>driver.parameter.pollinterval: 2</pre>
<pre>driver.parameter.port: auto</pre>
<pre>driver.version: 2.4.3-2519M</pre>
<pre>driver.version.data: LiebertPSP HID 0.1</pre>
<pre>driver.version.internal: 0.35</pre>
<pre>ups.input.frequency: 50.0</pre>
<pre>ups.input.voltage: 243</pre>
<pre>ups.mfr: Emerson Network Power</pre>
<pre>ups.model: LiebertPSP</pre>
<pre>ups.output.percentload: 54</pre>
<pre>ups.output.voltage: 240</pre>
<pre>ups.powersummary.capacitygranularity1: 1</pre>
<pre>ups.powersummary.capacitygranularity2: 1</pre>
<pre>ups.powersummary.capacitymode: 2</pre>
<pre>ups.powersummary.configvoltage: 12.0</pre>
<pre>ups.powersummary.designcapacity: 100</pre>
<pre>ups.powersummary.fullchargecapacity: 100</pre>
<pre>ups.powersummary.imanufacturer: 19</pre>
<pre>ups.powersummary.ioeminformation: 19</pre>
<pre>ups.powersummary.iproduct: 1</pre>
<pre>ups.powersummary.presentstatus.batterypresent: 1</pre>
<pre>ups.powersummary.presentstatus.belowremainingcapacitylimit: 0</pre>
<pre>ups.powersummary.presentstatus.charging: 1</pre>
<pre>ups.powersummary.presentstatus.discharging: 0</pre>
<pre>ups.powersummary.presentstatus.needreplacement: 0</pre>
<pre>ups.powersummary.presentstatus.shutdownimminent: 0</pre>
<pre>ups.powersummary.rechargeable: 1</pre>
<pre>ups.powersummary.remainingcapacity: 100</pre>
<pre>ups.powersummary.remainingcapacitylimit: 38</pre>
<pre>ups.powersummary.voltage: 14</pre>
<pre>ups.powersummary.warningcapacitylimit: 38</pre>
<pre>ups.productid: 0001</pre>
<pre>ups.serial:</pre>
<pre>ups.status: OL</pre>
<pre>ups.vendorid: 10af</pre>
<p>Search hints:</p>
<p>Vendor ID: 0x10af</p>
<p>Product ID: 0x0001</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>LogWatch SMART monitoring</title>
		<link>/2010/09/27/logwatch-smart-monitoring/</link>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Mon, 27 Sep 2010 11:09:23 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<category><![CDATA[Making the world a better place]]></category>
		<guid isPermaLink="false">/?p=299</guid>

					<description><![CDATA[Why is one of my boxes reporting SMART data in the LogWatch and [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Why is one of my boxes reporting SMART data in the LogWatch and the others not?</p>
<p>I&#8217;d installed smartmontools but it just doesn&#8217;t seem to be working.</p>
<p>Finally sussed it.   Have a look at /etc/default/smartmontools and enable deamon</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Hauppauge WinTV Nova-S Plus on Linux</title>
		<link>/2010/08/04/hauppauge-wintv-nova-s-plus-on-linux/</link>
					<comments>/2010/08/04/hauppauge-wintv-nova-s-plus-on-linux/#comments</comments>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Wed, 04 Aug 2010 17:15:09 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<category><![CDATA[Making the world a better place]]></category>
		<category><![CDATA[tv]]></category>
		<guid isPermaLink="false">/?p=291</guid>

					<description><![CDATA[The Nova-S Plus is a Â good card. Â http://www.hauppauge.co.uk/site/products/data_novasplus.html But, it would appear there [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>The Nova-S Plus is a Â good card. Â <a href="http://www.hauppauge.co.uk/site/products/data_novasplus.html">http://www.hauppauge.co.uk/site/products/data_novasplus.html</a></p>
<p>But, it would appear there is a defect in these boards, or at least a strange design, which means that they won&#8217;t lock on to some frequencies which require the 22kHz tone sending to the LNB with new drivers because there&#8217;s no link between the flange and dolphin-points. Â There&#8217;s plenty to read about here:</p>
<p><a href="https://bugzilla.kernel.org/show_bug.cgi?id=9476">https://bugzilla.kernel.org/show_bug.cgi?id=9476</a></p>
<p>And there&#8217;s a patch which fixes the problem byÂ controllingÂ the tone generator directly but it&#8217;ll never get in to the main kernel. Â For yourÂ convenienceÂ here is a link to a binary driver built for Ubuntu Lucid kernel version 2.6.32-23-generic:</p>
<p><a href="/wp-content/uploads/2010/08/isl6421.ko">/wp-content/uploads/2010/08/isl6421.ko</a></p>
<p>Replace the current isl6421.ko from /lib/modules/2.6.32-23-generic/kernel/drivers/media/dvb/frontends/isl6421.ko with this one. Â It might also work for newer kernel versions, or not. Â Who knows? Â Not me.</p>
<p>I&#8217;ve also got a Hauppauge S2 HD and this patched driver doesn&#8217;t seem to effect it.</p>
<p>Search hints:</p>
<p>Hauppauge Nova S plus linux won&#8217;t lock horizontal 22khz tone can&#8217;t pick up some channels. You can also check out my guide on <a style="text-decoration: none" href="http://outdoormoviehq.com/ultimate-guide-to-outdoor-movies/"><font color="#555555">Everything You Need to Set Up a Backyard Cinema</font></a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2010/08/04/hauppauge-wintv-nova-s-plus-on-linux/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
			</item>
		<item>
		<title>Asterisk set up in the UK with SMS</title>
		<link>/2009/09/16/asterisk-set-up-in-the-uk-with-sms/</link>
					<comments>/2009/09/16/asterisk-set-up-in-the-uk-with-sms/#comments</comments>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Wed, 16 Sep 2009 21:15:02 +0000</pubDate>
				<category><![CDATA[asterisk]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[tv]]></category>
		<guid isPermaLink="false">/?p=209</guid>

					<description><![CDATA[Why you need to buy a TDM400 instead of a AX100p.]]></description>
										<content:encoded><![CDATA[<p><strong>EDIT: 25 Sept 2010<br />
The below specifically refers to Asterisk 1.4. Go to the bottom for an update on 1.6</strong></p>
<p>Why do I always get myself in to these situations?</p>
<p>Many years ago I knocked up a set of scripts to record TV programs from a DVB-T card.Â  Getting the TV card working was really hard work.Â  I had to hack about with the driver source code, compile custom kernels, build endless versions of the driver, and so on and so on and so on.Â  It was a pain in the arse, which was compounded by the fact that at the time very few other people (end users) were trying to get these cards working, so there wasn&#8217;t much community support.Â  My scripts were great and everything and I could record TV, taxes were low and life was, on the whole, pretty good.</p>
<p>Then <a href="http://www.kryogenix.org/">Stuart</a> put me on to MythTV.Â  It quickly became evident that although my scripts were functional they were nothing compared to Myth.Â  So I moved over.Â  Again with the pain.</p>
<p>The basics were there but DVB support was in it&#8217;s infancy and it was a lot of hard work getting it working.Â  I persevered and learnt a lot about MythTV in the process.Â  Yay me.Â  At the beginning MythTV was a foreign country.Â  By the time I&#8217;d got it working the way I wanted it was my home town.</p>
<p>And so it will be with Asterisk, I hope.</p>
<p><span style="text-decoration: underline;">Things I have learnt about Asterisk</span></p>
<ol>
<li>The cheap FXO cards they sell on eBay are more trouble than they are worth.</li>
<li>The documentation on the <a href="http://www.voip-info.org/wiki/">voip-info site</a> is often out of date.</li>
<li>UK Caller ID works with the TDM400&#8217;s out of the box.</li>
<li>Sending &amp; receiving SMS&#8217;s does work, but it&#8217;s a bitch, and unreliable.</li>
<li>The logic in Asterisks&#8217; dial plan (extensions.conf et al) is illogical to me</li>
<li>FreePBX is both a blessing and a curse.</li>
<li>I love it.</li>
</ol>
<p>In a bit more detail then:</p>
<p>1.Â  The FXO cards you can get from eBay for about 20 quid work perfectly well.Â  For making calls.Â  But, there are a few drawbacks.Â  They don&#8217;t support polarity reversal which is the method by which incoming calls and Caller ID are announced to Asterisk.Â  You&#8217;ll still get ringing indications and be able to make calls, but you won&#8217;t get Caller ID.Â  Or rather, you can get Caller ID but you need to patch the Zaptel drivers and the Asterisk source.Â  The patches are old and don&#8217;t apply perfectly.Â  They are also seemingly unsupported now, in that no one cares if you are having problems with them.Â  I got the patches applied but Asterisk wouldn&#8217;t compile and I don&#8217;t know/care enough to fix it.Â  I was in the market for an ATA anyway so I put that 40 quid towards the cost of the TDM400p11 from <a href="http://www.novavox.co.uk/products/analogue-cards/a400p.html">NovaVox</a> and if I hadn&#8217;t bought the <a href="http://www.x100p.eu/product_info.php?products_id=39">AX-100</a> then the initial outlay for a fully supported card isn&#8217;t so bad.Â  It also works out cheaper to add another FXS port the to TDM400 than it does to buy another ATA.Â  The AX-100 also has a US spec. &#8220;<a href="http://en.wikipedia.org/wiki/Telephone_hybrid">hybrid</a>&#8221; in it which means that the <a href="http://en.wikipedia.org/wiki/Balun">unbalanced</a> UK spec phone lines and the AX-100 are not perfectly matched which can cause wicked echo.Â  The TDM400 has a tunable hybrid, and that&#8217;s a good thing.Â  All that said &#8211; for 20quid I still think it&#8217;s worth getting one to play with.Â  Ask me about doing a swap, if you&#8217;ve got any cool toys you don&#8217;t wantÂ  (I&#8217;ve got a DVB-T card going spare as well!).</p>
<p>2.Â  The <a href="http://www.voip-info.org/">VOIP-info.org</a> site is a really good source of data.Â  The website might be ugly, but there is a lot of Asterisk data on there.Â  Unfortunately there is little in the way of information, and some of the data is way out of date.Â  It acts as a good reference point but isn&#8217;t for the beginner because most pages assume a lot of prior knowledge.Â  Sure &#8211; I could go in and edit the Wiki, but I don&#8217;t know if what I&#8217;m doing is the best way of doing it, or even the correct way to do it.Â  So for now that&#8217;s what this blog post is for.</p>
<p>3.Â  BT send the Caller ID information before the first ring.Â  The process goes something like this:</p>
<pre class="codestyle"><em>Line polarity reversed -&gt; Caller ID sent as FSK (sort of modem tones) -&gt; Phone starts to ring -&gt; Call Connected -&gt; <a href="http://www.urbandictionary.com/define.php?term=Charlie+Brown+Teacher">Charlie Brown's Teacher</a> -&gt; Call Hung Up -&gt; Line polarity reversed</em>
</pre>
<p>You can see the importance of being able to detect polarity reversal in the call set-up and tear-down.Â  The AX100 simply doesn&#8217;t do it.Â  The TDM400 does, and it&#8217;s fully supported out of the box, as is UK style Caller ID, where the ID is sent before the first ring.Â  The hack for the AX100 keeps a buffer running all the time and then once a call comes in it looks in this buffer for the caller ID FSK and decodes it.Â  Shonky, I think you&#8217;ll agree.Â  My advice is that if you want to do caller ID in the UK buy a TDM400.Â  If you are a masochist then feel free to try with the AX100, I&#8217;d love to read your HowTo once you&#8217;ve got it working.</p>
<p>4.Â  SMS.Â  What a bitch.Â  I recently discovered my <a href="http://www.productsandservices.bt.com/consumerProducts/displayTopic.do?topicId=25504">subscription with BT</a> gives me 200 free SMS text messages a month.Â  So to make sure I was getting best value from the phone subscription I went out and spent 100quid on a PCI card and then spent hours and hours and hours fiddling about trying to get it working.Â  I don&#8217;t know why, I probably send about 3 text&#8217;s a month from my mobile, the whole <a href="http://en.wikipedia.org/wiki/George_Mallory">&#8220;Because it&#8217;s there&#8221;</a> thing I guess.Â  A pox on you, Mallory.</p>
<p>Last night I finally got it working semi-reliably for incoming and outgoing texts.Â  I can send and receive from my mobile, but Stuart doesn&#8217;t receive my messages.Â  Ho hum.</p>
<p><span style="text-decoration: underline;"><strong>Firstly, receiving SMS&#8217;s. </strong></span> Now, I don&#8217;t really understand the extensions.conf language.Â  It&#8217;s all a bit, well, wrong, to my eyes.Â  All I can tell you is that this is how I got it working.Â  <strong>NOTE:Â  This WILL NOT work for you if you just copy and paste.</strong> Sorry about that.Â  Perhaps someone can help me re-write it so that it does?</p>
<p>I&#8217;m using <a href="http://www.freepbx.org/">FreePBX</a> as a GUI and it rewrites some of the Asterisk config files for you.Â  I&#8217;m not sure if the context [from-pstn] is one that I created, or a standard one.Â  What you need to find out is what route incoming calls from the PSTN take i.e. which contexts they pass through before they start ringing on your internal phones.Â  You can do this my running the Asterisk console and turning verbosity up to about 6 (core set verbose 6) and then calling in from outside.Â  You should see a trace of what contexts get called as the call comes in.</p>
<p>For example, my call flow goes something like this:</p>
<pre class="codestyle">[from-zaptel] -&gt; [from-pstn] -&gt; [macro-user-callerid] -&gt; 600@[ext-group]
</pre>
<p>Where 600 is an extensions number I set up with FreePBX to ring all internal phones.</p>
<p>I chose to test for SMS&#8217;s in the [from-pstn] context. You can visualise what the [from-pstn] context does when a call comes in by using the Asterisk CLI.Â  Use the command &#8220;dialplan show s@from-pstn&#8221; to see the instructions that would be followed when [from-pstn] gets called at position &#8220;s&#8221;, or start.</p>
<p>Originally, mine went something like this:</p>
<pre class="codestyle">[ Included context 'ext-did-0001' created by 'pbx_config' ]
's' =&gt;Â Â Â Â Â Â Â Â Â Â Â  1. Set(__FROM_DID=${EXTEN})Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  [pbx_config]
2. Gosub(cidlookup|cidlookup_1|1)Â Â Â Â Â Â Â Â Â Â Â Â  [pbx_config]
3. ExecIf($[ "${CALLERID(name)}" = "" ] |Set|CALLERID(name)=${CALLERID(num)}) [pbx_config]
4. Set(__CALLINGPRES_SV=${CALLINGPRES_${CALLINGPRES}}) [pbx_config]
5. SetCallerPres(allowed_not_screened)Â Â Â Â Â Â Â  [pbx_config]
6. Goto(ext-group|600|1)Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  [pbx_config]
</pre>
<p>You can follow the call progression through this quite easily.Â  We jump in at position (or priority) 1, we set a variable, then we jump to some cidlookup sub-routine, then if the CALLERID(name) is blank we set it to be the same as the caller id number, then something about CALLINGPRES, not sure what that does, ditto the next line, and then we go to ext-group|600|1.Â  Ahhaaa!Â  I know that 600 is the group that I call to ring all the phones, so that must be where the call is handed off to other contexts or functions that let you do talking to people.Â  Since an incoming SMS doesn&#8217;t need to get as far as ringing on a phone, it makes sense to me to interrupt the call flow during [from-pstn].</p>
<p>So I added [from-pstn-custom] to /etc/asterisk/extensions_custom.conf like this:</p>
<pre class="codestyle">[from-pstn-custom]
exten =&gt; s,3,GotoIf($["${CALLERID(num)}" = "08005875290"]?will-sms,s,1)
exten =&gt; s,4,Verbose("Not an incoming SMS")
exten =&gt; s,5,Gosub(cidlookup,cidlookup_1,1)
exten =&gt; s,n,ExecIf($[ "${CALLERID(name)}" = "" ] ,Set,CALLERID(name)=${CALLERID(num)})
exten =&gt; s,n,Set(__CALLINGPRES_SV=${CALLINGPRES_${CALLINGPRES}})
exten =&gt; s,n,SetCallerPres(allowed_not_screened)
exten =&gt; s,n,Goto(ext-group,600,1)

[will-sms]
exten =&gt; s,1,Verbose(=============Entered Will SMS)
exten =&gt; s,n,Answer()
exten =&gt; s,n,Wait(2)
exten =&gt; s,n,SMS(default|a)
exten =&gt; s,n,Verbose(=============Done with Will SMS)
exten =&gt; s,n,Hangup(16)
</pre>
<p>How does it work?Â  The [from-pstn-custom] overrides the [from-pstn] from the main extensions.conf file provided by FreePBX and adds a line that branches to a context called [will-sms] which then uses the SMS application to receive the SMS and then hangup the phone.Â  (Actually, I think SMS hangs up for you.Â  But, you know, whatever)</p>
<p>In [from-pstn] in extensions.conf is a line that &#8220;includes&#8221; the config from &#8220;from-pstn-custom&#8221;.Â  By virtue of being imported, the instructions in [from-pstn-custom] take precedence over the other config, <span style="text-decoration: underline;">because it is imported first</span>.Â  The config files are read line by line in the order they appear in the file.Â  But, the imported instructions do not completely replace the config that is already there.Â  They are sort of merged. That&#8217;s why I&#8217;ve copied a load of bits from the original call flow in to my new [from-pstn-custom].Â  If I left them out, then some bits of my new context would be applied and some wouldn&#8217;t.Â  The way I got it to work was to replicate the call flow to the point of it branching off to [ext-group] in my new context.Â  If you do a &#8220;dialplan show s@from-pstn&#8221; now, you see this:</p>
<pre class="codestyle">[ Included context 'from-pstn-custom' created by 'pbx_config' ]
's' =&gt;Â Â Â Â Â Â Â Â Â Â Â  3. GotoIf($["${CALLERID(num)}" = "08005875290"]?will-sms|s|1) [pbx_config]
4. Verbose("Not an incoming SMS")Â Â Â Â Â Â Â Â Â Â Â Â  [pbx_config]
6. Gosub(cidlookup|cidlookup_1|1)Â Â Â Â Â Â Â Â Â Â Â Â  [pbx_config]
7. ExecIf($[ "${CALLERID(name)}" = "" ] |Set|CALLERID(name)=${CALLERID(num)}) [pbx_config]
[pbx_config]
9. Set(__CALLINGPRES_SV=${CALLINGPRES_${CALLINGPRES}}) [pbx_config]
10. SetCallerPres(allowed_not_screened)Â Â Â Â Â Â  [pbx_config]
11. Goto(ext-group|600|1)Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  [pbx_config]

[ Included context 'ext-did-0001' created by 'pbx_config' ]
's' =&gt;Â Â Â Â Â Â Â Â Â Â Â  1. Set(__FROM_DID=${EXTEN})Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  [pbx_config]
2. Gosub(cidlookup|cidlookup_1|1)Â Â Â Â Â Â Â Â Â Â Â Â  [pbx_config]
3. ExecIf($[ "${CALLERID(name)}" = "" ] |Set|CALLERID(name)=${CALLERID(num)}) [pbx_config]
4. Set(__CALLINGPRES_SV=${CALLINGPRES_${CALLINGPRES}}) [pbx_config]
5. SetCallerPres(allowed_not_screened)Â Â Â Â Â Â Â  [pbx_config]
6. Goto(ext-group|600|1)Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  [pbx_config]

[ Included context 'ext-did-catchall' created by 'pbx_config' ]
'_.' =&gt;Â Â Â Â Â Â Â Â Â Â  1. Noop(Catch-All DID Match - Found ${EXTEN} - You probably want a DID for this.) [pbx_config]
2. Goto(ext-did|s|1)Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  [pbx_config]
</pre>
<p>You can see my new [from-pstn-custom] context at the start, along with the copied commands from ext-did-001 to ensure that they run in the way I expected.Â  The upshot of this is that I now branch to my new context [will-sms] when the incoming caller ID is the BT 0800 number from where SMS&#8217;s originate.Â  You should note that the 0800 number can change if you have more than one incoming SMS box registered, so don&#8217;t do that.Â  Just register one incoming addressÂ  (more on this later).</p>
<p>The [will-sms] is pretty straight forward.Â  Answer the phone, wait 2 seconds, and then start the SMS application which does all the clever noises.Â  The key here is Wait.Â  Without it SMS reception is intermittent at best.Â  The SMS(default|a) tells the SMS app to receive in to the default queue (this works, don&#8217;t understand fully why) and to do an &#8220;a&#8221; for answer.Â  I had a load of problems with the example from VOIP-info where it passes in the extension number, which is &#8220;s&#8221; for start.Â  If the SMS application sees an &#8220;s&#8221; it thinks it means &#8220;send&#8221;.Â  That won&#8217;t work!</p>
<p>If you manage to bodge all this in to your dial plan then you should find your incoming SMS&#8217;s in /var/spool/asterisk/sms/mtrx</p>
<p>Make sure that /var/spool/asterisk is writeable by the same user as Asterisk is running as.</p>
<p><span style="text-decoration: underline;"><strong>Sending SMS&#8217;s.</strong></span> Was a whole bunch of no fun as well.Â  Especially if you don&#8217;t understand Asterisk properly.</p>
<p>The command line I&#8217;m using to send an SMS is:</p>
<pre class="codestyle">smsq --motx-channel=Zap/2/17094009 -d &lt;phone number&gt;Â  -m "&lt;message&gt;"
</pre>
<p>That works because zap channel 2 is my PSTN line.Â  You might need to change this.Â  17094009 is the SMSC centre number for BT to accept SMS messages for delivery to other networks.</p>
<p>When I was trying to get sending working, which I actually did first, I couldn&#8217;t reliably get Asterisk to talk to the SMSC.Â  Before I had the receive working properly the BT system would ring me up and I&#8217;d answer the phone, then not hearing a carrier the BT system would hang up again.Â  This gave me an idea, if I could emulate the carrier then I could hear what the BT system was sending down the line.Â  I sent an SMS to the home phone, it rang in on one of the extensions and I whistled at it.Â  Because I am just so <a href="http://en.wikipedia.org/wiki/Leet">1337</a> I hit the right tone and I could hear FSK noises coming down the line, but they were really really quiet.Â  I tweaked the gain up a little bit in the /etc/asterisk/zapata.conf file:</p>
<pre class="codestyle">rxgain=2
txgain=0
</pre>
<p>and tried again.Â  It was louder!Â  Sending a test message to &#8220;00000&#8221; with the text of &#8220;test&#8221;Â  causes the BT system to send a message back to youÂ  (you need to send &#8220;register&#8221; to 00000 before BT will send you messages as text instead of reading them to you by the way &#8211; but if it can&#8217;t successfully deliver the message back to you to say it has received your &#8220;register&#8221; message it will ignore the request and you&#8217;ll keep getting the messages read to you by a friendly robot &#8211; hence the need to get receiving working first).Â  It sent!Â  I saw some hex coming from the SMS application in the Asterisk log.Â  I sent a text to my mobile, and it arrived.Â  Yay!Â  problem solved.</p>
<p>5.Â  Asterisk&#8217;s dial plan.Â  Bonkers.Â  I still can&#8217;t make sense of them.Â  Oh well, I&#8217;ll get there in the end.</p>
<p>6.Â  FreePBX is brilliant if you want to get Asterisk configured with some very complex applications (think voicemail) in a matter of minutes.Â  But, if it makes editing the config files by hand a bit more complicated because you have to use xxxx_custom files.Â  Thus, all the replication of code when as above when you don&#8217;t understand how it all works.</p>
<p>7.Â  Check out my hold music hacked together from various online sources, and no doubt subject to various copyright restrictions.Â  I&#8217;ve compressed the hell out of it, if you want a better quality version for your own amusement let me know.</p>
<p><a href="/wp-content/uploads/2009/09/holdmusic.mp3">Hold Music</a></p>
<p>I crack myself up, I really do.</p>
<p>Also &#8211; think of all the cool things you could do if you could phone or text your computer and get it to do things for you.</p>
<p>Now I&#8217;m off to write myself an gmail &lt;-&gt; SMS gateway doodad.</p>
<p>Ok &#8211; with Asterisk 1.6 the above is slightly less relevant.Â  Try this in your dialplan instead:</p>
<pre>[will-sms]</pre>
<pre>exten =&gt; s,1,Verbose(=============Entered Will SMS)</pre>
<pre>exten =&gt; s,n,Answer()</pre>
<pre>exten =&gt; s,n,SMS(default,ap(1500))</pre>
<pre>exten =&gt; s,n,Verbose(=============Done with Will SMS)</pre>
<pre>exten =&gt; s,n,Hangup(16)

The SMS application has the option to add a pause which I've set to 1500 ms.  Seems to work.</pre>
]]></content:encoded>
					
					<wfw:commentRss>/2009/09/16/asterisk-set-up-in-the-uk-with-sms/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		<enclosure url="/wp-content/uploads/2009/09/holdmusic.mp3" length="202680" type="audio/mpeg" />

			</item>
		<item>
		<title>Told you so&#8230;</title>
		<link>/2009/07/14/told-you-so/</link>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Tue, 14 Jul 2009 08:29:55 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<guid isPermaLink="false">/?p=199</guid>

					<description><![CDATA[I warned you, I warned you. Â But would you listen? Â Oh no. Â You [&#8230;]]]></description>
										<content:encoded><![CDATA[<p><img class="alignnone size-medium wp-image-200" title="Tim The Enchanter" src="/wp-content/uploads/2009/07/tim-300x208.jpg" alt="Tim The Enchanter" width="300" height="208" /></p>
<p>I warned you, I warned you. Â But would you listen? Â Oh no. Â You knew it all.</p>
<p>Spotify is on the ropes.</p>
<p><a href="http://stuff.tv/blogs/music/archive/2009/07/13/why-spotify-might-die.aspx">http://stuff.tv/blogs/music/archive/2009/07/13/why-spotify-might-die.aspx</a></p>
<p>Sign up to the paid for service if you can. Â Now &#8211; if they had a proper native Linux client I would.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Aspire Revo as a MythTV frontend</title>
		<link>/2009/06/22/aspire-revo-as-a-mythtv-frontend/</link>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Mon, 22 Jun 2009 10:34:33 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<category><![CDATA[tv]]></category>
		<category><![CDATA[mythtv]]></category>
		<category><![CDATA[nettop]]></category>
		<category><![CDATA[revo]]></category>
		<category><![CDATA[ubuntu]]></category>
		<guid isPermaLink="false">/?p=184</guid>

					<description><![CDATA[Yes - you should buy that Acer Revo.]]></description>
										<content:encoded><![CDATA[<p><strong>It&#8217;s brilliant!</strong></p>
<p>If you&#8217;re reading this then I will assume you already know about MythTV and you&#8217;ve searched Google to find out if the Aspire Revo box will make a decent MythTV frontend.  In short, yes &#8211; it works fantastically well.</p>
<p>I bought the 8GB SSD Linux version from Play for about 150 quid (get a Play credit card and you can knock off about another 15 quid in vouchers and get 9 months interest free credit, for what it&#8217;s worth), and I also bought 2 x 2GB SODIMM.</p>
<p>The first thing I did was take the lid off to have a look inside. Â This wasn&#8217;t as easy as I thought. Â There&#8217;s one little screw under a sticker that says something about a warranty and then you just have to prise the lid off.  It&#8217;s pretty stiff, to the extent that I was convinced there was another screw somewhere, but it comes off in the end. Â  I removed the WiFi card since I won&#8217;t use it and it might reduce the heat/power. Â  The RAM swap presented no surprises, but the appearance of a 160GB HDD did.</p>
<p>I had sort of decided that the SSD was the better option for me for two reasons; less heat and less noise.  But, seeing as I&#8217;ve been gifted 160GB of disk space and under use the HDD makes no noise, I&#8217;m very happy!</p>
<p>I decided on XUbuntu over the normal version partly because of the reduced overheads and software bloat, I really don&#8217;t need Open Office and The Gimp installed on this box and I can&#8217;t be bothered with manually selecting packages at install, so I downloaded the XUbuntu ISO and stuck it on a USB pen drive with <a href="http://unetbootin.sourceforge.net/">Unetbootin</a>. Â I had a few problems booting from the pen drive, it kept complaining that the initrd was corrupt, so in the end I had to use the alternative version and run through the install on the command line. Â  I blew away all the partitions on the disk, I won&#8217;t need any of the Acer software &#8211; there&#8217;s nothing much of use on there anyway.</p>
<p>Once XUbuntu was installed I downloaded and compiled the latest NVIDIA drivers:</p>
<p><a href="http://www.nvidia.com/object/linux_display_ia32_185.18.14.html">http://www.nvidia.com/object/linux_display_ia32_185.18.14.html</a></p>
<p>(this is the latest version at I write this, check if there is a newer one)</p>
<p>and then I downloaded the SVN version of Myth and enabled VDPAU.  If you&#8217;re looking for help setting up Myth and VDPAU check the MythTV wiki, there&#8217;s more information there than I can recreate here.  Read the <a href="http://www.mythtv.org/wiki/Installing_MythTV_SVN_on_Ubuntu_Breezy">&#8220;Installing SVN on Breezy&#8221;</a> document to give you a hand getting all the bits and bobs installed to allow you to compile Myth. Note: some libraries have changed name, e.g. liblame is now libmp3lame.</p>
<p>Then it&#8217;s a case of enabling VDPAU at compile time using the configure script and then creating a playback profile to use VDPAU from within the frontend.</p>
<p>My old frontend had a dual core 2GHz processor in and would sit at about 80 to 90 percent usage on both cores while watching 1080p video and sucked somewhere in the region of 80 to 100 watts.  The Revo&#8217;s Atom processor sits at about 10% usage (obviously the graphics card is doing the work) and sucks less than 20watts, while also being nearly silent.</p>
<p>Sound was a bit of a faff &#8211; the Revo has an HDMI connector with the audio path built in.  To hear anything I needed to enable and unmute the IEC958 (spdif) channel and then tell Myth to use ALSA:hdmi for audio. Â  Ubuntu detected the sound card perfectly well, so trust me when I say you do not need to download a later version of ALSA, you just need to get the settings right. Â  You might also need to tell your telly to pick up digital audio, not analogue. Â  I haven&#8217;t got system sounds going down the HDMI just yet , but I don&#8217;t think this will be a problem.</p>
<p>Summary then;  very very good choice for a small, quiet and cheap frontend that can also double as an Internet browser.</p>
<p>I think I might buy another one.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>DVB-T reception on the cheap</title>
		<link>/2009/06/18/dvb-t-reception-on-the-cheap/</link>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Thu, 18 Jun 2009 16:07:04 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<category><![CDATA[tv]]></category>
		<guid isPermaLink="false">/?p=178</guid>

					<description><![CDATA[In an effort to reduce noise and electricity consumption in my living room [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>In an effort to reduce noise and electricity consumption in my living room I&#8217;m removing the current MythTV frontend and replacing it with an Aspire Revo.</p>
<p>The box under the telly at the moment is a dual-core Pentium 4 somethingorother running at about 2Gz in a nice looking &#8220;media&#8221; case. Â  It&#8217;s great and everything, and it decodes HD perfectly well but it has fans on the processor, fans on the video card and fans in the PSU which all add up to a noisy box.</p>
<p>So it&#8217;s going to get re-purposed as a general computer and the Revo will go in it&#8217;s place. Â  Actually it will get bolted on to the back of the telly to keep it out of the reach of children who like to press buttons. Â I&#8217;ll report back on the building of a frontend on a Revo once I wrestle the package from the hands of the worlds most apathetic delivery company &#8220;Home Delivery Network&#8221;. Â (I think they use the word &#8220;delivery&#8221; quite incorrectly)</p>
<p>Anyway, as part of this upgrade I need to add a DVB-T tuner to the Revo but with no PCI slots the only option is to use a USB tuner. Â  My father-in-law put me on to Kenable who have a lot of bits and bobs at good prices, specifically the PEAK DVB-T USB tuner for 15quid:</p>
<p><span style="text-decoration: underline;">USB Peak DIGITAL DVB-T Freeview TV Card XP MCE Vista Dongle</span><br />
<a href="http://www.kenable.co.uk/product_info.php/cPath/171/products_id/1435"> http://www.kenable.co.uk/product_info.php/cPath/171/products_id/1435</a></p>
<p>I wasn&#8217;t able to find much about about it before I bought it, but I thought I&#8217;d take a punt and get one anyway and worry about getting it working under Linux later.</p>
<p>It arrived the other day and I popped the lid off to find an AF9015 demodulator and a QT1010 tuner inside. Â  I checked on the Linux TV wiki and things looked pretty good on the whole. Â When I plugged it in to an Ubuntu 9.04 box nothing happened which was a shame but a bit more digging made me think that I should download the latest Linux TV drivers and have another go.</p>
<p>I followed the instructions from here:</p>
<p><a href="http://www.linuxtv.org/wiki/index.php/How_to_Obtain,_Build_and_Install_V4L-DVB_Device_Drivers">http://www.linuxtv.org/wiki/index.php/How_to_Obtain,_Build_and_Install_V4L-DVB_Device_Drivers</a></p>
<p>and downloaded, compiled and installed the new drivers. Â You&#8217;ll also need some different firmware to that which is supplied with Ubuntu, download 4.95.0 from here:</p>
<p><a href="http://www.otit.fi/~crope/v4l-dvb/af9015/af9015_firmware_cutter/firmware_files/4.95.0/">http://www.otit.fi/~crope/v4l-dvb/af9015/af9015_firmware_cutter/firmware_files/4.95.0/</a></p>
<p>and place the .fw file in /lib/firmware (not as most people say /lib/firmware/&lt;kernel version&gt;). Â You&#8217;ll need to overwrite the other version, or rename it or whatever.</p>
<p>Reboot and you&#8217;re golden. The stick is detected and the firmware loads and I have been watching live TV on my Aspire One netbook courtesy of Mplayer.</p>
<p>You probably need to bear in mind that if you apply any future kernel/driver updates from Ubuntu then your drivers might get over written. Â There&#8217;s a change that the new version of the Ubuntu drivers will include the required AF9015 driver, but it might not. Â Also, you probably don&#8217;t need to compile all the drivers, just the ones for the AF9015 and QT1010 modules. Â I&#8217;ll look in to this, and if you promise to be good I&#8217;ll provide a nice little package with everything in.</p>
<p>&nbsp;</p>
<p>UPDATE: Â So here we are two and a bit years later. Â I&#8217;ve just found this same tuner in the bottom of a box and plugged it in to my 11.04 Ubuntu machine. Â When I plugged it in Ubuntu automatically suggested I download the firmware. Â Awesome. Â It now &#8220;just works&#8221;. Â Well pleased.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Acer Aspire One &#038; Ubuntu Jaunty 9.04</title>
		<link>/2009/06/18/acer-aspire-one-ubuntu-jaunty-904/</link>
		
		<dc:creator><![CDATA[will]]></dc:creator>
		<pubDate>Thu, 18 Jun 2009 12:30:12 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<category><![CDATA[ubuntu]]></category>
		<guid isPermaLink="false">/?p=174</guid>

					<description><![CDATA[I&#8217;m really happy with my new Aspire One. Â I was a bit late [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>I&#8217;m really happy with my new Aspire One. Â I was a bit late coming to the whole netbook party. Â Â  In the last few months I&#8217;ve been looking at the various options and the Aspire One was still the best deal in my opinion.</p>
<p>I&#8217;ve upgraded the RAM by adding another 1GB (you can&#8217;t add any more than this, it doesn&#8217;t pass POST if you do) and given it a custom paint job (pictures coming soon).</p>
<p>While I was playing around with various OS options I was caught by a bug which corrupts the SD card (left hand side) if you&#8217;ve opted to put /home on there and suspended. Â  See this page for more info:</p>
<p><a href="http://blog3.robertalks.com/index.php/2009/06/17/revision-3-for-kernel-2630-final-released/">https://bugs.launchpad.net/ubuntu/+source/pm-utils/+bug/342096</a></p>
<p>The fix is to recompile the kernel and change a few options from the Ubuntu defaults. Â While I was waiting for the source to download I had a quick poke around on Google and found that Robert had already built a custom kernel for the Aspire complete with all the Aspire One specific changes needed to make the WiFi LEDs work, and fan control and what have you. Â  I posted a comment on Robert&#8217;s site asking if he had also included the fix from the Ubuntu bug as detailed above, he hadn&#8217;t but about 30 mins later a new release was ready to roll. Â  It fixes the corrupt SD problem and saved me a lot of menuconfig work. Â Thanks Robert!</p>
<p>You can get more details from here:</p>
<p><a href="http://blog3.robertalks.com/index.php/2009/06/17/revision-3-for-kernel-2630-final-released/">http://blog3.robertalks.com/index.php/2009/06/17/revision-3-for-kernel-2630-final-released/</a></p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
